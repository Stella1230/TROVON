lua_pushnil	,	F_157
Tvb	,	T_11
TvbRange_stringz	,	F_166
WSLUA_ARG_ByteArray_prepend_PREPENDED	,	F_28
tvb_get_string_enc	,	F_161
g_byte_array_free	,	F_18
WSLUA_METHOD	,	T_9
WSLUA_ARG_ByteArray_set_index_OFFSET	,	F_49
ENC_UCS_2	,	V_62
lua_type	,	F_8
outstanding_TvbRange	,	V_29
WSLUA_OPTARG_Tvb_raw_OFFSET	,	F_114
tvb_reported_length	,	F_99
g_new	,	F_150
"Requested bitfield out of range"	,	L_32
"TvbRange:bitfield() does not handle %d bits"	,	L_33
lua_pushlstring	,	F_59
Tvb_register	,	F_117
tvb_get_letohieee_double	,	F_142
WSLUA_ARG_ByteArray__cat_SECOND	,	F_21
WSLUA_ARG_ByteArray_tvb_NAME	,	F_78
len	,	V_4
Tvb_reported_length_remaining	,	F_101
gint	,	V_37
WSLUA_OPTARG_ByteArray_tohex_SEPARATOR	,	F_62
tvb_get_string_time	,	F_156
"Missing support for ZLIB"	,	L_35
GUINT32_SWAP_LE_BE	,	F_148
WSLUA_OPTARG_TvbRange_range_OFFSET	,	F_189
tvb	,	V_23
endoff	,	V_52
guint32	,	T_15
WSLUA_OPTARG_TvbRange_nstime_ENCODING	,	F_153
checkTvbRange	,	F_86
g_memdup	,	F_79
nstime	,	V_45
TvbRange_bitfield	,	F_181
"The range must be 4 or 8 bytes long"	,	L_30
str	,	V_34
tvb_reported_length_remaining	,	F_103
tvb_child_uncompress	,	F_194
WSLUA_CONSTRUCTOR	,	T_1
TvbRange_uint	,	F_118
tvb_get_string_bytes	,	F_180
tvb_get_letoh64	,	F_131
wslua_bin2hex	,	F_64
TvbRange_ustring	,	F_164
WSLUA_REGISTER_CLASS	,	F_67
gshort	,	V_36
ba	,	V_2
""	,	L_4
pushTvb	,	F_76
sub	,	V_20
g_byte_array_prepend	,	F_29
free_TvbRange	,	F_72
g_ptr_array_new	,	F_203
ENC_ASCII	,	V_54
ByteArray_base64_decode	,	F_52
L	,	V_1
ishex	,	V_6
GByteArray	,	T_3
luaL_argerror	,	F_43
TvbRange_ustringz_any	,	F_175
result	,	V_13
ByteArray_get_index	,	F_44
lua_Number	,	V_18
"TvbRange:int() does not handle %d byte integers"	,	L_22
pos	,	V_65
need_free	,	V_25
Tvb_reported_length_remaining_OFFSET	,	F_102
TvbRange_string	,	F_159
"TvbRange:le_uint() does not handle %d byte integers"	,	L_19
OFFSET	,	V_21
tvb_new_real_data	,	F_80
sep	,	V_5
g_ptr_array_remove_index_fast	,	F_71
ENC_STR_HEX	,	V_64
checkTvb	,	F_90
address	,	V_41
tvbr	,	V_28
g_free	,	F_38
WSLUA_ARG_ByteArray_set_index_VALUE	,	F_41
lua_pinfo	,	V_33
uncompr_tvb	,	V_66
guint8	,	T_10
s	,	V_3
WSLUA_OPTARG_TvbRange_strsize_ENCODING	,	F_172
TvbRange_offset	,	F_197
v	,	V_17
secs	,	V_48
TvbRange_raw	,	F_198
WSLUA_OPTARG_TvbRange_bitfield_LENGTH	,	F_183
tvb_length_remaining	,	F_108
buff	,	V_43
tvb_get_ntohl	,	F_122
tvb_get_stringz_enc	,	F_170
WSLUA_METAMETHOD	,	T_8
tvbuff_t	,	T_13
tvb_strsize	,	F_174
tvb_get_ntohs	,	F_120
WSLUA_ARG_ByteArray_get_index_INDEX	,	F_45
tvb_set_free_cb	,	F_81
"Out Of Bounds"	,	L_9
WSLUA_OPTARG_ByteArray_new_HEXBYTES	,	F_2
tvb_find_guint8	,	F_169
gboolean	,	T_6
luaL_checkint	,	F_34
outstanding_Tvb	,	V_27
"expired tvb"	,	L_13
TvbRange__tostring	,	F_201
count	,	V_63
"TvbRange:int64() does not handle %d byte integers"	,	L_24
encoding	,	V_46
tvb_get_ptr	,	F_116
retval	,	V_53
tvb_raw_offset	,	F_105
"Byte out of range"	,	L_8
tvb_get_guint8	,	F_119
name	,	V_31
"Tvbs can only be created and used in dissectors"	,	L_12
push_Tvb	,	F_74
WSLUA_ARG_ByteArray__cat_FIRST	,	F_20
idx	,	V_16
TvbRange_float	,	F_137
TvbRange_register	,	F_202
ByteArray_subset	,	F_48
"ByteArray size must be non-negative"	,	L_3
Tvb_reported_len	,	F_98
TvbRange_ustring_any	,	F_163
ByteArray_prepend	,	F_27
Tvb__gc	,	F_96
clear_outstanding_Tvb	,	F_70
WSLUA_OPTARG_ByteArray_new_SEPARATOR	,	F_3
Tvb_range	,	F_110
TvbRange_ipv4	,	F_143
ByteArray_append	,	F_30
ENC_UTF_16	,	V_57
expired	,	V_24
TvbRange_le_float	,	F_140
WSLUA_RETURN	,	F_15
lua_pushstring	,	F_94
WSLUA_ARG_TvbRange_uncompress_NAME	,	F_192
ByteArray_register	,	F_66
ByteArray_tohex	,	F_60
lowercase	,	V_22
siz	,	V_14
ByteArray_set_index	,	F_39
ENC_STR_TIME_MASK	,	V_50
"TvbRange:le_int() does not handle %d byte integers"	,	L_23
HAVE_LIBZ	,	F_193
ENC_BIG_ENDIAN	,	V_59
"TvbRange:le_uint64() does not handle %d byte integers"	,	L_21
WSLUA_ARG_ByteArray_set_size_SIZE	,	F_33
TvbRange	,	T_12
toByteArray	,	F_17
LUA_TBOOLEAN	,	V_8
"index out of range"	,	L_7
"TvbRange:float() does not handle %d byte floating numbers"	,	L_26
ip_addr	,	V_40
WSLUA_OPTARG_TvbRange_raw_OFFSET	,	F_199
_wslua_tvb	,	V_30
wmem_free	,	F_95
pushInt64	,	F_135
Address	,	T_14
ByteArray_len	,	F_47
ByteArray__tostring	,	F_65
WSLUA_OPTARG_TvbRange_bitfield_POSITION	,	F_182
"The range must be 4 octets long"	,	L_28
"TvbRange:uint64() does not handle %d byte integers"	,	L_20
TvbRange_uint64	,	F_127
TvbRange_le_nstime	,	F_158
WSLUA_OPTARG_Tvb_range_OFFSET	,	F_111
ByteArray_tvb	,	F_77
Tvb_raw	,	F_113
lua_pushinteger	,	F_155
ws_base64_decode_inplace	,	F_54
lua_tvb	,	V_32
wmem_strdup_printf	,	F_92
ByteArray_raw	,	F_55
TvbRange_bytes	,	F_178
g_byte_array_new	,	F_4
luaL_optstring	,	F_10
tvb_get_bits8	,	F_184
tvb_get_ntohieee_double	,	F_139
AT_ETHER	,	V_44
WSLUA_ARG_ByteArray__eq_FIRST	,	F_24
TvbRange_uncompress	,	F_191
TvbRange_le_uint64	,	F_130
WSLUA_OPTARG_ByteArray_raw_OFFSET	,	F_56
"Unnamed"	,	L_11
gunichar2	,	T_17
"Uncompressed"	,	L_34
TvbRange__gc	,	F_195
lua_toboolean	,	F_9
pushNSTime	,	F_154
Tvb_len	,	F_100
"TvbRange:uint() does not handle %d byte integers"	,	L_18
"offset beyond end of byte array"	,	L_10
tvb_memdup	,	F_151
tvb_get_bits16	,	F_185
toTvb	,	F_97
TvbRange_range	,	F_188
lua_pushboolean	,	F_26
WSLUA_OPTARG_ByteArray_tohex_LOWERCASE	,	F_61
"bad index"	,	L_6
tvb_get_ntoh24	,	F_121
PUSH_TVBRANGE	,	F_109
WSLUA_ERROR	,	F_35
g_ptr_array_add	,	F_75
TvbRange_le_uint	,	F_123
ByteArray__concat	,	F_19
TvbRange_ustringz	,	F_176
tvb_bytes_to_ep_str	,	F_93
g_malloc	,	F_53
tvb_get_ipv4	,	F_144
gint64	,	V_38
AT_IPv4	,	V_42
ByteArray_set_size	,	F_32
WSLUA_OPTARG_TvbRange_bytes_ENCODING	,	F_179
"TvbRange:le_float() does not handle %d byte floating numbers"	,	L_27
wslua_hex2bin	,	F_11
WSLUA_OPTARG_ByteArray_raw_LENGTH	,	F_57
"TVB(%i) : %s"	,	L_14
TvbRange_int64	,	F_134
WSLUA_OPTARG_TvbRange_range_LENGTH	,	F_190
"invalid encoding value"	,	L_31
tvb_length	,	F_91
HEXBYTES	,	V_7
pushUInt64	,	F_128
tvb_new_subset	,	F_88
tvb_get_bits32	,	F_186
WSLUA_ARG_ByteArray__eq_SECOND	,	F_25
ENC_NA	,	V_55
WSLUA_OPTARG_Tvb_raw_LENGTH	,	F_115
WSLUA_ARG_Tvb_new_subset_RANGE	,	F_85
g_byte_array_set_size	,	F_36
tvb_offset_exists	,	F_87
ENC_LITTLE_ENDIAN	,	V_58
g_byte_array_append	,	F_12
TvbRange_tvb	,	F_84
lua_State	,	T_2
WSLUA_ARG_ByteArray_set_index_LENGTH	,	F_50
data	,	V_12
clear_outstanding_TvbRange	,	F_73
"must be a string"	,	L_2
size_t	,	T_5
luaL_checklstring	,	F_6
SET_ADDRESS	,	F_145
TvbRange_len	,	F_196
ByteArray_new	,	F_1
luaL_error	,	F_51
"0"	,	L_5
"offset beyond end of Tvb"	,	L_17
_wslua_tvbrange	,	V_35
ByteArray	,	T_7
tvb_get_letohl	,	F_126
lua_pushnumber	,	F_46
TvbRange_ether	,	F_149
nstime_t	,	V_47
tvb_get_letohs	,	F_124
WSLUA_OPTARG_TvbRange_raw_LENGTH	,	F_200
guint	,	V_9
" "	,	L_1
offset	,	V_19
"Range is out of bounds"	,	L_16
wmem_packet_scope	,	F_162
pushByteArray	,	F_14
luaL_optint	,	F_58
ByteArray__gc	,	F_16
tvb_bytes_exist	,	F_168
ws_tvb	,	V_26
add_new_data_source	,	F_82
tvb_get_ntoh64	,	F_129
TvbRange_int	,	F_132
tvb_get_letoh24	,	F_125
WSLUA_OPTARG_TvbRange_string_ENCODING	,	F_160
WSLUA_ARG_ByteArray_append_APPENDED	,	F_31
wslua_optbool	,	F_63
g_malloc0	,	F_37
g_str_equal	,	F_42
TvbRange_le_ustringz	,	F_177
TvbRange_le_ipv4	,	F_147
"out of bounds"	,	L_15
lua_pop	,	F_13
"TvbRange:le_int64() does not handle %d byte integers"	,	L_25
TvbRange_le_int64	,	F_136
tvb_get_letohieee_float	,	F_141
little_endian	,	V_56
WSLUA_OPTARG_ERROR	,	F_7
checkByteArray	,	F_22
push_TvbRange	,	F_107
Tvb_offset	,	F_104
tvb_get_bits64	,	F_187
PUSH_TVB	,	F_83
ba2	,	V_11
tvb_unicode_strsize	,	F_173
ba1	,	V_10
uchar	,	V_60
tvb_get_ntohieee_float	,	F_138
Tvb__call	,	F_106
WSLUA_ARG_ByteArray_set_index_INDEX	,	F_40
addr	,	V_39
TvbRange_le_int	,	F_133
pushAddress	,	F_146
padding	,	V_15
"The range must be 6 bytes long"	,	L_29
NSTime	,	T_16
tvb_free	,	F_69
gchar	,	T_4
Tvb__tostring	,	F_89
lua_gettop	,	F_5
nsecs	,	V_49
WSLUA_OPTARG_TvbRange_stringz_ENCODING	,	F_167
ENCODING	,	V_51
WSLUA_OPTARG_Tvb_range_LENGTH	,	F_112
TvbRange_nstime	,	F_152
TvbRange_strsize	,	F_171
ENC_CHARENCODING_MASK	,	V_61
ByteArray__eq	,	F_23
free_Tvb	,	F_68
TvbRange_le_ustring	,	F_165
