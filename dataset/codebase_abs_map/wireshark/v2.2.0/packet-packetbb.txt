"Sequence number"	,	L_31
"Tail"	,	L_78
hf_packetbb_addr_value	,	V_105
hf_packetbb_addr_head	,	V_101
ett_packetbb	,	V_166
"packetbb.msg.addr.value4"	,	L_81
hf_packetbb_msgheader_origaddripv4	,	V_140
hf_packetbb_tlv_length	,	V_60
proto_register_protocol	,	F_35
expert_packetbb	,	V_194
"packetbb.msg.header"	,	L_36
"packetbb.msg.addr.value.prefix"	,	L_88
ett_packetbb_tlv	,	V_46
tvb_reported_length	,	F_13
proto_tree_add_ether	,	F_18
"Has value"	,	L_107
hf_packetbb_addr_flags	,	V_99
" (%s / %d)"	,	L_5
"Version"	,	L_23
"Has sequence number"	,	L_27
tlvBlock_item	,	V_13
messageType	,	V_117
"packetbb.msg.addr.haszerotail"	,	L_71
tlvLength	,	V_33
FT_ETHER	,	V_183
gint	,	T_15
tlvType	,	V_34
indexEnd	,	V_38
"packetbb.msg"	,	L_34
packetbb_udp_port	,	V_169
"Mid"	,	L_85
"UDP port for packetbb"	,	L_127
TFS	,	F_32
"TLV"	,	L_93
tvb	,	V_1
numAddr	,	V_71
guint32	,	T_10
COL_INFO	,	V_164
FT_BOOLEAN	,	V_178
packetbb_tree	,	V_161
"Has multiple indices"	,	L_105
"Not enough octets for minimal addressblock header"	,	L_9
"packetbb.tlv.hastypeext"	,	L_102
"packetbb.msg.origaddrcustom"	,	L_55
"packetbb.msg.addr.value.mid"	,	L_86
hf_packetbb_tlv_indexend	,	V_59
proto_tree_add_expert_format	,	F_2
packetbb_handle	,	V_168
proto_tree_add_ipv4	,	F_16
cinfo	,	V_162
proto_packetbb	,	V_165
proto_tree_add_ipv6	,	F_17
"packetbb.tlv"	,	L_94
"packetbb.flags"	,	L_26
"Has tlv block"	,	L_29
"packetbb.seqnr"	,	L_32
block_index	,	V_77
ADDR_HASHEAD	,	V_91
msgheader_type_vals	,	V_128
array_length	,	F_34
"Unknown type"	,	L_4
"packetbb.pkttlv.type"	,	L_95
hf_packetbb_msgheader_flags_mhashopcount	,	V_136
"/%d"	,	L_16
" (%s)"	,	L_3
tlv_item	,	V_14
hf_packetbb_tlv_flags_hasvalue	,	V_23
DISSECTOR_ASSERT	,	F_14
hf_packetbb_addr_num	,	V_98
"packetbb.msg.seqnum"	,	L_60
hf_packetbb_msgheader_addresssize	,	V_138
"packetbb.msg.flags.mhasseqnum"	,	L_46
hf_packetbb_tlv_flags_hasmultiindex	,	V_22
hf_packetbb_tlv_flags_hasextlen	,	V_24
proto_tree_add_boolean	,	F_21
hf_register_info	,	T_14
ADDR_HASSINGLEPRELEN	,	V_94
"packetbb.msg.addr.head"	,	L_77
"Message"	,	L_33
dissect_pbb_header	,	F_22
guint16	,	T_6
c	,	V_64
COL_PROTOCOL	,	V_163
"packetbb.tlv.indexend"	,	L_116
i	,	V_63
"packetbb.msg.addr.hasfulltail"	,	L_69
j	,	V_195
e_in6_addr	,	V_106
addrValue_tree	,	V_83
messageEnd	,	V_121
"Has multiple values"	,	L_111
"packetbb.msg.addr.valuecustom"	,	L_84
maxoffset	,	V_5
hf_packetbb_msgheader_flags_mhashoplimit	,	V_135
"packetbb.tlv.multivalue"	,	L_121
hf_packetbb_tlv_flags_hastypext	,	V_20
guint8	,	T_9
"UDP communication port for packetbb PDUs"	,	L_128
ti	,	V_160
BASE_NONE	,	V_173
"Index start"	,	L_113
value_string	,	T_8
"Has head"	,	L_66
"packetbb.tlv.hasmultiindex"	,	L_106
"Not enough octets for addressblock head"	,	L_10
TLV_CAT_MESSAGE	,	V_50
"packetbb.msg.flags"	,	L_39
hf_packetbb_msgheader_origaddrcustom	,	V_143
"PacketBB"	,	L_125
ett_packetbb_tlv_flags	,	V_56
header_tree	,	V_112
hf_packetbb_msgheader_hopcount	,	V_145
hf_packetbb_msgheader_seqnr	,	V_146
tlvblockEnd	,	V_9
"Not enough octets for addressblock tail"	,	L_12
tvbuff_t	,	T_1
ett_packetbb_msg	,	V_127
"packetbb.tlv.typeext"	,	L_100
tvb_get_ntohs	,	F_3
tvb_memcpy	,	F_15
"Count"	,	L_63
proto_tree_add_bitmask	,	F_9
BASE_HEX	,	V_177
"Not enough octets for minimal tlvblock"	,	L_1
ett_packetbb_tlv_value	,	V_65
gboolean	,	T_12
"packetbb.tlv.hasvalue"	,	L_108
proto_item_add_subtree	,	F_5
module_t	,	T_17
hf_packetbb_msgheader_type	,	V_131
head_index	,	V_78
hf_packetbb_addr_flags_haszerotail	,	V_88
"packetbb.flags.phasseqnum"	,	L_28
proto_register_field_array	,	F_36
mid_index	,	V_80
FT_BYTES	,	V_184
hf_packetbb_tlv_flags_hasmultivalue	,	V_25
ei_packetbb_error	,	V_26
hf_packetbb_msgheader_flags	,	V_132
ei	,	V_187
addressType	,	V_67
ett_packetbb_header	,	V_152
dissector_add_uint	,	F_30
"packetbb.tlvblock.length"	,	L_92
tlv_type_vals	,	V_18
packetbb_prefs_initialized	,	V_167
MSG_HEADER_HASORIG	,	V_122
FT_UINT16	,	V_180
ett_base	,	V_186
"packetbb.msg.addr.valuemac"	,	L_83
"Extended Type"	,	L_99
tvb_get_guint8	,	F_6
"Packet header"	,	L_21
midSize	,	V_76
tvb_captured_length	,	F_26
TLV_HAS_SINGLEINDEX	,	V_41
tlvFlags	,	V_35
"0 (implicit)"	,	L_7
dissector_delete_uint	,	F_29
"Address"	,	L_80
"packetbb.msg.addr.hashead"	,	L_67
"packetbb.tlvblock"	,	L_90
"packetbb.header"	,	L_22
"packetbb.msg.addr.value6"	,	L_82
TLV_CAT_ADDRESS	,	V_110
"packetbb.msg.flags.mhashoplimit"	,	L_43
addrtlv_type_vals	,	V_54
ADDR_HASZEROTAIL	,	V_92
tlvIndex	,	V_147
hf_packetbb_tlv_indexstart	,	V_58
gint8	,	T_5
hf_packetbb_msgheader_flags_mhasseqnr	,	V_137
"Originator address"	,	L_51
"Index end"	,	L_115
"TLV block"	,	L_89
ett_packetbb_msgheader	,	V_130
hf_packetbb_tlv	,	V_45
PACKET_HEADER_HASTLV	,	V_158
" (%d TLVs)"	,	L_8
"Message header"	,	L_35
tlvCount	,	V_16
"packetbb.msg.addr"	,	L_62
addr_tree	,	V_82
"Has extended length"	,	L_109
"Has originator address"	,	L_40
val_to_str_const	,	F_8
ett_packetbb_addr_flags	,	V_100
length	,	V_39
"PacketBB Protocol"	,	L_124
hf_packetbb_tlvblock_length	,	V_30
pkttlv_type_vals	,	V_49
hf_packetbb_addrtlv_type	,	V_53
hf_packetbb_header_flags	,	V_154
PI_WARN	,	V_189
tlvValue_item	,	V_15
proto_tree_add_uint_format_value	,	F_11
ENC_BIG_ENDIAN	,	V_31
"packetbb.error"	,	L_122
dissect_pbb_tlvblock	,	F_1
global_packetbb_port	,	V_170
"packetbb.msg.addr.num"	,	L_64
hf	,	V_171
"packetbb.msg.flags.mhashopcount"	,	L_45
"packetbb.msg.flags.mhasorig"	,	L_41
"packetbb.msg.addrsize"	,	L_48
"packetbb.msg.hopcount"	,	L_59
"Hop limit"	,	L_56
prefix	,	V_104
header_item	,	V_115
ett_packetbb_addr_value	,	V_107
prefs_register_protocol	,	F_40
"packetbb"	,	L_19
"packetbb.msg.size"	,	L_50
FT_IPv6	,	V_182
headerLength	,	V_120
hf_packetbb_addr	,	V_96
message_item	,	V_114
col_set_str	,	F_24
dissect_packetbb	,	F_23
"Flags"	,	L_25
tlvValue_tree	,	V_12
FT_IPv4	,	V_181
"address head length is too long"	,	L_11
"packetbb.tlv.flags"	,	L_98
proto_item_append_text	,	F_7
"ERROR!"	,	L_123
dissect_pbb_addressblock	,	F_12
"Hop count"	,	L_58
"Not enough octets for address block"	,	L_14
hf_packetbb_header	,	V_151
"packetbb.tlv.hasextlen"	,	L_110
col_clear	,	F_25
messageFlags	,	V_118
tfs_true_false	,	V_179
proto_register_subtree_array	,	F_37
hf_packetbb_addr_value_mid	,	V_108
proto_reg_handoff_packetbb	,	F_27
"packetbb.tlv.value"	,	L_119
"packetbb.addrtlv.type"	,	L_97
hf_packetbb_msgheader_origaddrmac	,	V_142
proto_tree_add_item	,	F_4
"Has multiple prelen"	,	L_74
pinfo	,	V_2
dissector_handle_t	,	T_13
"packetbb.flags.phastlv"	,	L_30
"Address block"	,	L_61
"Has single index"	,	L_103
flags	,	V_19
TLV_HAS_MULTIVALUE	,	V_62
hf_packetbb_header_flags_phastlv	,	V_150
_U_	,	V_159
ett_packetbb_tlvblock	,	V_29
tlvStart	,	V_32
"packetbb.msg.addr.hassingleprelen"	,	L_73
"address tail length is too long"	,	L_13
headerFlags_tree	,	V_113
"Value"	,	L_118
MSG_HEADER_HASHOPCOUNT	,	V_124
"packetbb.msg.hoplimit"	,	L_57
"packetbb.msg.addr.tail"	,	L_79
tlvExtType	,	V_36
hf_packetbb_msg	,	V_126
hf_packetbb_msgheader_size	,	V_139
packetbb_module	,	V_193
"packetbb.tlv.hassingleindex"	,	L_104
VALS	,	F_33
TLV_HAS_MULTIINDEX	,	V_42
MAX_ADDR_SIZE	,	V_70
"packetbb.msg.addr.hasmultiprelen"	,	L_75
PI_PROTOCOL	,	V_188
head_length	,	V_73
MSG_HEADER_HASHOPLIMIT	,	V_123
"packetbb.msg.addr.flags"	,	L_65
addr_item	,	V_84
packet_flags	,	V_148
FT_UINT8	,	V_175
TLV_CAT_PACKET	,	V_47
BASE_DEC	,	V_176
"Has full tail"	,	L_68
"Head"	,	L_76
"packetbb.tlv.length"	,	L_117
proto_item	,	T_7
"Prefix"	,	L_87
expert_register_field_array	,	F_39
hf_packetbb_tlv_type	,	V_17
indexStart	,	V_37
ENC_NA	,	V_28
PACKET_HEADER_HASSEQNR	,	V_156
hf_packetbb_tlv_flags_hassingleindex	,	V_21
hf_packetbb_addr_flags_hashead	,	V_86
"Has type-ext"	,	L_101
"packetbb.msg.origaddrmac"	,	L_54
"Has hopcount"	,	L_44
proto_register_packetbb	,	F_31
data	,	T_11
ett_packetbb_addr	,	V_97
hf_packetbb_header_flags_phasseqnum	,	V_149
ett_packetbb_header_flags	,	V_155
tlvblockLength	,	V_8
ADDR_HASMULTIPRELEN	,	V_95
message_tree	,	V_111
hf_packetbb_msgheader	,	V_129
TLV_HAS_TYPEEXT	,	V_40
prefs_register_uint_preference	,	F_41
ei_register_info	,	T_16
"communication_port"	,	L_126
expert_register_protocol	,	F_38
"packetbb.version"	,	L_24
addrCount	,	V_6
hf_packetbb_tlvblock	,	V_27
guint	,	T_4
FT_NONE	,	V_172
"Length"	,	L_91
offset	,	V_4
messageLength	,	V_119
ett	,	V_191
PACKETBB_MSG_TLV_LENGTH	,	V_192
hf_packetbb_tlv_value	,	V_61
expert_module_t	,	T_18
tree	,	V_3
"Not enough octets for tlvblock"	,	L_2
hf_packetbb_addr_tail	,	V_102
proto_tree_add_bytes	,	F_19
"AddressSize"	,	L_47
hf_packetbb_addr_flags_hasfulltail	,	V_87
packet_info	,	T_2
msgtlv_type_vals	,	V_52
"Has hoplimit"	,	L_42
"Has zero tail"	,	L_70
headerFlags_item	,	V_116
"packetbb.msg.origaddr6"	,	L_53
"packetbb.tlv.hasmultivalue"	,	L_112
tail_length	,	V_74
hf_packetbb_addr_flags_hassingleprelen	,	V_89
dissect_pbb_message	,	F_20
hf_packetbb_msgheader_flags_mhasorig	,	V_134
hf_packetbb_msgheader_hoplimit	,	V_144
proto_tree_add_uint	,	F_10
block_length	,	V_75
EXPFILL	,	V_190
FT_UINT_BYTES	,	V_185
tlv_tree	,	V_11
prefix_index	,	V_81
"packetbb.msgtlv.type"	,	L_96
hf_packetbb_msgtlv_type	,	V_51
"%d (implicit)"	,	L_6
" (%d addresses)"	,	L_15
hf_packetbb_tlv_flags	,	V_55
ipv4	,	V_103
TLV_HAS_EXTLEN	,	V_44
"Has single prelen"	,	L_72
ADDR_HASFULLTAIL	,	V_93
hf_packetbb_tlv_typeext	,	V_57
addr	,	V_69
hf_packetbb_addr_value_prefix	,	V_109
HFILL	,	V_174
tlvCat	,	V_7
"Not enough octets for message"	,	L_18
"packetbb.msg.type"	,	L_38
tlvblock_tree	,	V_10
"Multivalue"	,	L_120
"udp.port"	,	L_20
address_flags	,	V_72
hf_packetbb_version	,	V_153
tail_index	,	V_79
create_dissector_handle	,	F_28
hf_packetbb_tlv_multivalue	,	V_66
"packetbb.msg.origaddr4"	,	L_52
addressSize	,	V_68
"Not enough octets for minimal message header"	,	L_17
ett_packetbb_msgheader_flags	,	V_133
TLV_HAS_VALUE	,	V_43
MSG_HEADER_HASSEQNR	,	V_125
hf_packetbb_pkttlv_type	,	V_48
"Size"	,	L_49
addrValue_item	,	V_85
hf_packetbb_msgheader_origaddripv6	,	V_141
hf_packetbb_addr_flags_hasmultiprelen	,	V_90
hf_packetbb_seqnr	,	V_157
"Type"	,	L_37
"packetbb.tlv.indexstart"	,	L_114
proto_tree	,	T_3
