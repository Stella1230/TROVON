proto_reg_handoff_socketcan	,	F_34
"Remote Transmission Request Flag"	,	L_10
proto_register_protocol	,	F_24
dissector_try_uint_new	,	F_18
register_decode_as	,	F_33
prefs_register_protocol	,	F_30
col_append_fstr	,	F_12
can_da_build_value	,	V_52
gint	,	T_10
col_set_str	,	F_5
CAN_EFF_MASK	,	V_27
id	,	V_18
tvb	,	V_4
COL_INFO	,	V_16
FT_BOOLEAN	,	V_47
frame_type	,	V_9
"Whether the CAN ID/flags field should be byte-swapped"	,	L_26
col_clear	,	F_6
cinfo	,	V_14
"can.flags.rtr"	,	L_11
can_da	,	V_54
proto_register_subtree_array	,	F_28
val_to_str	,	F_11
array_length	,	F_27
can_value	,	F_3
next_tvb	,	V_13
decode_as_t	,	T_16
proto_tree_add_item	,	F_15
pinfo	,	T_2
col_add_fstr	,	F_10
dissector_handle_t	,	T_17
"Error Flag"	,	L_12
_U_	,	V_1
socketcan_bigendian_handle	,	V_58
gpointer	,	T_4
dissect_socketcan_bigendian	,	F_21
WTAP_ENCAP_SOCKETCAN	,	V_60
result	,	V_2
LINUX_SLL_P_CAN	,	V_61
hf_register_info	,	T_12
prefs_register_bool_preference	,	F_32
can_identifier	,	V_11
"Unknown (0x%02x)"	,	L_4
ett_can	,	V_32
COL_PROTOCOL	,	V_15
FT_UINT8	,	V_48
CAN_LEN_OFFSET	,	V_19
BASE_DEC	,	V_49
"CAN"	,	L_2
hf_can_errflag	,	V_36
can_module	,	V_51
proto_item	,	T_8
CAN_DATA_OFFSET	,	V_29
decode_as_default_populate_list	,	V_55
ENC_NA	,	V_31
guint8	,	T_9
MAX_DECODE_AS_PROMPT_LEN	,	V_3
ti	,	V_8
"   %s"	,	L_5
hf_can_extflag	,	V_34
"can"	,	L_16
"sll.ltype"	,	L_28
dissect_socketcan_hostendian	,	F_22
"can.id"	,	L_7
build_valid_func	,	T_14
ENC_LITTLE_ENDIAN	,	V_40
register_dissector_table	,	F_29
register_dissector	,	F_25
tvb_get_ntohl	,	F_7
data	,	T_11
"can.subdissector"	,	L_18
socketcan_hostendian_handle	,	V_59
tvbuff_t	,	T_5
proto_register_socketcan	,	F_23
"wtap_encap"	,	L_27
LINUX_CAN_RTR	,	V_21
can_id	,	V_12
BASE_HEX	,	V_45
LINUX_CAN_ERR	,	V_23
hf_can_ident	,	V_33
decode_as_default_reset	,	V_56
hf_can_len	,	V_37
can_da_values	,	V_53
decode_as_default_change	,	V_57
tvb_get_letohl	,	F_8
proto_item_add_subtree	,	F_16
"Identifier"	,	L_6
module_t	,	T_13
ENC_HOST_ENDIAN	,	V_42
CAN_EFF_FLAG	,	V_24
proto_register_field_array	,	F_26
"protocol"	,	L_23
guint	,	T_7
ett	,	V_50
"Byte-swap the CAN ID/flags field"	,	L_25
wmem_packet_scope	,	F_14
dissector_add_uint	,	F_36
tree	,	V_5
can_prompt	,	F_1
encoding	,	V_6
"Frame-Length"	,	L_14
packet_info	,	T_1
tvb_get_guint8	,	F_9
tvb_bytes_to_str_punct	,	F_13
tvb_captured_length	,	F_20
"Next level protocol as"	,	L_1
proto_can	,	V_30
"can-bigendian"	,	L_20
frame_len	,	V_10
ENC_ANTI_HOST_ENDIAN	,	V_41
"byte_swap"	,	L_24
"%s: 0x%08x"	,	L_3
hf_can_rtrflag	,	V_35
"Network"	,	L_17
"can.flags.xtd"	,	L_9
g_snprintf	,	F_2
LINUX_CAN_STD	,	V_26
tvb_new_subset_length	,	F_17
subdissector_table	,	V_38
dissect_socketcan_common	,	F_4
byte_swap	,	V_39
call_data_dissector	,	F_19
can_tree	,	V_7
CAN_ERR_FLAG	,	V_22
HFILL	,	V_46
LINUX_CAN_EXT	,	V_25
prefs_register_obsolete_preference	,	F_31
CAN_RTR_FLAG	,	V_20
"can.flags.err"	,	L_13
gchar	,	T_3
create_dissector_handle	,	F_35
"CAN next level dissector"	,	L_22
"can-hostendian"	,	L_21
frame_type_vals	,	V_28
ENC_BIG_ENDIAN	,	V_17
FT_UINT32	,	V_44
decode_as_value_t	,	T_15
"Extended Flag"	,	L_8
"Controller Area Network"	,	L_19
"can.len"	,	L_15
proto_tree	,	T_6
hf	,	V_43
