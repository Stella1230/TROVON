symbol_table_info_type_vals_ext	,	V_67
ett_elf_overlapping	,	V_258
"Entry size is different then currently parsed bytes"	,	L_312
p_type_vals	,	V_194
hf_elf_eh_frame_fde_call_frame_instructions	,	V_125
"elf.shentsize"	,	L_100
"elf_wtap"	,	L_331
"Info"	,	L_196
REGISTER_64_SIZE	,	V_196
hf_elf_file_class	,	V_166
"elf.sh_info"	,	L_197
entry_item	,	V_26
"elf.sh_flags.group"	,	L_159
"This section holds Thread-Local Storage, meaning that each separate execution flow has its own distinct instance of this data. Implementations need not support this flag."	,	L_157
"Data Alignment Factor"	,	L_223
"Overlapping size"	,	L_55
hf_dwarf_upper	,	V_10
segment_offset	,	V_150
table_entry_length	,	V_72
hf_elf_eh_frame_hdr_binary_search_table_entry_initial_location	,	V_83
guint32	,	T_10
FT_BOOLEAN	,	V_289
"ProgramHeader"	,	L_18
shentsize	,	V_18
"FDE Count Encoding"	,	L_263
hf_elf_symbol_table_name_index	,	V_55
"elf.entry"	,	L_79
" (Number: %u, Index: %u, Length: %u)"	,	L_35
"Section Name. Its value is an index into the section header string table section, giving the location of a null-terminated string."	,	L_145
"ftap_encap"	,	L_328
"Augmentation String"	,	L_217
size	,	V_96
"The section contains executable machine instructions."	,	L_179
"elf.invalid_entry_size"	,	L_311
array_length	,	F_51
"The upper 4 bits indicate how the value is to be applied."	,	L_303
""	,	L_10
"Extended Length of CIE."	,	L_211
"Extended Length of FDE."	,	L_241
hf_elf_sh_name	,	V_217
ett_elf_black_holes	,	V_257
"Entry Size in Program Header Table"	,	L_93
"Merge Flag"	,	L_173
"A signed LEB128 encoded value that is factored out of all offset instructions that are associated with this CIE or its FDEs. This value shall be multiplied by the register offset argument of an offset instruction to obtain the new offset value."	,	L_225
ENC_ASCII	,	V_254
"Type: Operating System Specific"	,	L_148
ett_binary_table	,	V_81
hf_elf_version	,	V_175
info_bind	,	V_53
hf_elf_phnum	,	V_185
dissect_symbol_table	,	F_17
"Info Link Flag"	,	L_167
ett_elf	,	V_163
"Extended Length"	,	L_209
"elf.eh_frame.fde.pc_range"	,	L_249
cfi_size	,	V_93
hf_register_info	,	T_22
proto_tree_add_bytes_format	,	F_38
".eh_frame_hdr"	,	L_33
"Return Address Register"	,	L_226
"elf.eh_frame_hdr.binary_search_table_encoding"	,	L_267
guint16	,	T_9
tag_to_type	,	V_32
" (Bind: %s, Type: %s)"	,	L_7
tvb_get_const_stringz	,	F_11
sh_name	,	V_22
": %s"	,	L_4
p_offset	,	V_152
i	,	V_156
"File Padding"	,	L_71
"Entry #%d "	,	L_36
"Type: User Specific"	,	L_150
RVALS	,	F_48
"Entry #%d: Processor Specific (0x%08x)"	,	L_21
"elf.sh_flags.merge"	,	L_174
tvb_memeql	,	F_34
hf_elf_sh_flags_operating_system_specific	,	V_224
hf_elf64_sh_entsize	,	V_248
"The sh_info field of this section header holds a section header table index."	,	L_169
BASE_NONE	,	V_272
hf_elf_dynamic_ignored	,	V_38
dynamic_tag_rvals	,	V_42
hf_elf_eh_frame_return_address_register	,	V_117
"elf.eh_frame.initial_instructions"	,	L_236
".strtab"	,	L_25
"elf.sh_entsize"	,	L_203
"elf.shnum"	,	L_103
shoff	,	V_16
"This member gives the offset from the beginning of the file at which the first byte of the segment resides."	,	L_115
"Program Header Table [%d entries]"	,	L_16
header_tree	,	V_131
"elf.os_abi"	,	L_68
"elf.p_vaddr"	,	L_117
"elf.eh_frame_hdr.version"	,	L_258
"Length of FDE. Zero indicates a terminator, 0xffffffff means that "	,	L_239
"elf"	,	L_319
"elf.sh_flags.alloc"	,	L_181
value_guard	,	F_1
hf_elf64_shoff	,	V_181
hf_elf_ehsize	,	V_183
BASE_HEX	,	V_277
"elf.dynamic.value"	,	L_291
PROTO_ITEM_SET_GENERATED	,	F_40
col_add_str	,	F_44
"ELF Header Size"	,	L_90
"Binary Search Table Encoding"	,	L_266
proto_item_add_subtree	,	F_4
"elf.sh_flags.strings"	,	L_171
module_t	,	T_20
"Infos"	,	L_37
"elf.eh_frame.augmentation_data"	,	L_233
proto_register_field_array	,	F_50
"Entry #%d: "	,	L_27
FT_BYTES	,	V_271
hf_elf64_dynamic_pointer	,	V_44
proto_reg_handoff_elf	,	F_58
"elf.type"	,	L_74
"ELF version: 4.1 DRAFT"	,	L_321
ei	,	V_297
"application/x-sharedlib"	,	L_327
dissector_add_uint	,	F_60
hf_elf_sh_flags_merge	,	V_232
ei_invalid_cie_length	,	V_110
"elf.p_filesz"	,	L_123
"elf.sh_flags.link_order"	,	L_165
"Link Index"	,	L_193
hf_elf_symbol_table_value	,	V_56
FT_UINT16	,	V_284
"elf.eh_frame.extended_length"	,	L_210
hf_elf_eh_frame_augmentation_length	,	V_120
hf_elf_p_vaddr	,	V_205
sh_type	,	V_148
dissect_elf_heur	,	F_45
tvb_captured_length	,	F_33
"Operating System Specific (0x%08x)"	,	L_28
hf_elf_eh_frame_augmentation_string	,	V_114
"Address"	,	L_185
"Entry #%d"	,	L_34
"This member holds the ELF header's size in bytes."	,	L_92
hf_elf_os_abi	,	V_170
hf_elf_data_encoding	,	V_167
ett_elf_section_header_entry	,	V_216
expert_add_info	,	F_29
hf_elf_sh_flags_processor_specific	,	V_223
"Name Index"	,	L_143
"The encoding format of the entries in the binary search table. A value of DW_EH_PE_omit indicates the binary search table is not present."	,	L_268
heur_dissector_add	,	F_61
HEURISTIC_ENABLE	,	V_304
"Program Header Table File Offset"	,	L_81
"Releated Section Header Index"	,	L_284
"An unsigned LEB128 encoded value that is factored out of all advance location instructions that are associated with this CIE or its FDEs. This value shall be multiplied by the delta argument of an adavance location instruction to obtain the new location value."	,	L_222
"Operating System Specific Flags"	,	L_130
hf_elf_flags	,	V_182
phnum	,	V_144
"elf.invalid_cie_length"	,	L_315
"If the section will appear in the memory image of a process, this member gives the address at which the section's first byte should reside. Otherwise, the member contains 0."	,	L_187
symbol_table_info_bind_vals	,	V_66
ett_elf_program_header_entry	,	V_191
hf_elf_eh_frame_fde_extended_length	,	V_109
"elf.p_memsz"	,	L_126
"Entry #%d: Operating System Specific (0x%08x)"	,	L_20
main_item	,	V_129
proto_register_elf	,	F_46
min_offset_segment	,	V_260
val_to_str_const	,	F_20
length	,	V_88
"elf.eh_frame_hdr.binary_search_table_entry.address"	,	L_276
"This member gives the value to which the segments are aligned in memory and in the file. Values 0 and 1 mean no alignment is required. Otherwise, p_align should be a positive, integral power of 2, and p_vaddr should equal p_offset, modulo p_align."	,	L_142
PI_WARN	,	V_299
"DWARF Exception Header application"	,	L_301
"the Extended Length field contains the actual length."	,	L_208
ett_elf_cfi_record	,	V_103
hf_elf_type	,	V_173
"TLS Flag"	,	L_155
FT_UINT32	,	V_274
hf_elf_sh_type_user_specific	,	V_220
phentsize	,	V_143
guint64	,	T_2
entry_end	,	V_92
hf	,	V_270
area_counter	,	V_154
"Read Flag"	,	L_134
augmentation_string	,	V_97
hf_elf_p_paddr	,	V_207
BASE_HEX_DEC	,	V_283
MAX_TAG_TO_TYPE	,	V_33
hf_elf_eh_frame_fde_augmentation_length	,	V_121
"Reserrved Flags"	,	L_132
hf_elf_p_offset	,	V_203
"This member holds the size in bytes of one entry in the file's program header table; all entries are the same size."	,	L_95
"Tag"	,	L_289
"Segment size is different then currently parsed bytes"	,	L_310
"elf.blackhole_size"	,	L_53
prefs_register_protocol	,	F_54
dissect_eh_frame_hdr	,	F_22
"elf.p_flags.write"	,	L_137
proto_tree_add_subtree	,	F_25
wmem_strdup_printf	,	F_37
get_section_name_offset	,	F_8
hf_elf_header_segment_size	,	V_264
hf_elf_sh_type	,	V_222
BASE_RANGE_STRING	,	V_293
"Flags"	,	L_87
dissect_uleb128	,	F_23
"Exec Instr Flag"	,	L_177
hf_elf_string	,	V_253
"This flag adds special ordering requirements for link editors."	,	L_166
"elf.sh_flags.exec_instr"	,	L_178
"Ignored"	,	L_294
DYNAMIC_TYPE_IGNORED	,	V_29
"This member holds the section header table index of the entry associated with the section name string table. If the file has no section name string table, this member holds the value SHN_UNDEF."	,	L_107
hf_elf_symbol_table_info_type	,	V_61
hf_elf_sh_flags_exec_instr	,	V_234
"Processor Specific Flags"	,	L_128
"elf.flags"	,	L_88
"Blackhole size between sections or program headers"	,	L_54
"Binary Search Table"	,	L_8
"Entry Size"	,	L_202
"Entry Size in Section Header Table"	,	L_99
"elf.eh_frame_hdr.eh_frame_ptr"	,	L_270
ei_cfi_extraneous_data	,	V_126
p_type	,	V_147
register_size	,	V_13
is_extended_length	,	V_98
"File Version"	,	L_65
"elf.p_paddr"	,	L_120
"elf.entry_bytes"	,	L_60
"elf.eh_frame.fde.augmentation_length"	,	L_251
"elf.shoff"	,	L_85
info_type	,	V_54
proto_tree_add_int64	,	F_31
"OS ABI"	,	L_67
"The data elements in the section consist of null-terminated character strings. The size of each character is specified in the section header's sh_entsize field."	,	L_172
hf_elf_file_version	,	V_169
hf_elf_file_size	,	V_263
"Value"	,	L_286
"A 4 byte unsigned value that is used to distinguish CIE records from FDE records. This value shall always be 0, which indicates this record is a CIE."	,	L_214
"ProgramHeaderEntry #%u"	,	L_23
name_index	,	V_50
hf_elf_shstrndx	,	V_188
"String"	,	L_307
ett_elf_cie_entry	,	V_104
"elf.sh_flags.maskos"	,	L_152
VALS	,	F_47
hf_elf_p_type	,	V_195
"elf.eh_frame_hdr.binary_search_table_entry.initial_location"	,	L_275
"Bind"	,	L_279
next_offset	,	V_158
info_item	,	V_48
unsigned_value	,	V_94
hf_elf_eh_frame_initial_instructions	,	V_124
"elf.sh_flags.info_link"	,	L_168
"This member gives the section's size in bytes."	,	L_192
prefs_register_static_text_preference	,	F_55
"Executable and Linkable Format"	,	L_317
section_name	,	V_51
dissect_leb128	,	F_24
hf_elf_eh_frame_hdr_fde_count	,	V_80
BASE_DEC	,	V_275
"This member holds a section header's size in bytes. A section header is one entry in the section header table; all entries are the same size."	,	L_101
class_vals	,	V_278
"elf.eh_frame.length"	,	L_206
ehsize	,	V_153
file_size	,	V_151
ENC_NA	,	V_9
"Binary Table Entry #%u"	,	L_9
"elf.file_version"	,	L_66
rval_to_str	,	F_16
"Version of the .eh_frame_hdr format. This value shall be 1."	,	L_259
entry_size	,	V_91
"Blackhole size"	,	L_52
hf_elf64_dynamic_value	,	V_43
"Initial location"	,	L_274
"Entry #%d: %s"	,	L_22
"elf.sh_flags.write"	,	L_183
REGISTER_32_SIZE	,	V_34
wmem_alloc	,	F_35
FT_INT64	,	V_291
hf_elf64_p_vaddr	,	V_206
hf_elf64_sh_size	,	V_242
"%s"	,	L_31
is_cie	,	V_90
"File Image Size"	,	L_122
"CIE Terminator"	,	L_11
shndx	,	V_19
"elf.file_class"	,	L_62
i_16	,	V_146
"Blackhole between: %s and &lt;EOF&gt;, size: %u"	,	L_42
proto_elf	,	V_162
entry_tree	,	V_25
hf_elf_machine	,	V_174
symbol_table_other_vals	,	V_292
enum_tag_type	,	T_13
i_next	,	V_157
"elf.p_flags.read"	,	L_135
"CIE ID"	,	L_212
expert_register_protocol	,	F_56
"elf.file_size"	,	L_47
hf_elf_sh_flags_info_link	,	V_230
version_vals	,	V_280
"The section occupies memory during process execution. Some control sections do not reside in the memory image of an object file; this attribute is off for those sections."	,	L_182
dissect_elf	,	F_32
hf_elf64_dynamic_ignored	,	V_45
"This section is a member (perhaps the only one) of a section group."	,	L_160
"elf.symbol_table.info.type"	,	L_281
type_vals	,	V_285
"elf.dwarf.format"	,	L_305
guint	,	T_8
"Length"	,	L_205
ett	,	V_302
DISSECTOR_ASSERT_HINT	,	F_2
"Too big file - not supported"	,	L_1
wmem_packet_scope	,	F_36
hf_elf_eh_frame_fde_augmentation_data	,	V_123
hf_elf_eh_frame_code_alignment_factor	,	V_115
hf_elf_sh_flags_tls	,	V_226
hf_elf_eh_frame_length	,	V_106
packet_info	,	T_11
hf_elf_eh_frame_extended_length	,	V_108
"Used to indicate that no value is present."	,	L_300
"Element Type: Processor Specific"	,	L_112
eh_dwarf_upper	,	V_295
"Header size + all segment size"	,	L_48
hf_elf_shoff	,	V_180
hf_elf_eh_frame_hdr_binary_search_table_entry_address	,	V_84
"elf.eh_frame.augmentation_length"	,	L_230
EXPFILL	,	V_300
"elf.header_segment_size"	,	L_49
"elf.eh_frame.fde.cie_pointer"	,	L_243
generated_item	,	V_139
"elf.eh_frame.fde.extended_length"	,	L_240
"elf.eh_frame.fde.call_frame_instructions"	,	L_256
"Execute Flag"	,	L_138
ett_elf_program_header	,	V_189
"A block of data whose contents are defined by the contents of the Augmentation String as described below. This field is only present if the Augmentation String contains the character 'z'."	,	L_234
pitem	,	V_40
"elf.p_align"	,	L_141
"elf.dynamic.pointer"	,	L_293
hf_elf_eh_frame_fde_pc_begin	,	V_118
HFILL	,	V_273
"This member categorizes the section's contents and semantics."	,	L_147
segment_info	,	V_155
"elf.p_flags.execute"	,	L_139
hf_elf64_phoff	,	V_179
info_tree	,	V_49
"Section Header Table String Index"	,	L_105
gchar	,	T_17
hf_elf_p_flags_read	,	V_200
"wtap_file"	,	L_329
proto_tree_add_subtree_format	,	F_26
"elf.sh_flags.tls"	,	L_156
"elf.version"	,	L_78
"Augmentation Data"	,	L_232
hf_elf64_p_filesz	,	V_210
machine_encoding	,	V_21
"This member gives the number of bytes in the file image of the segment; it may be zero."	,	L_124
"The encoding format of the eh_frame_ptr field."	,	L_262
"elf.symbol_table.name_index"	,	L_277
pi	,	V_87
"Unknown"	,	L_3
hf_elf_sh_entsize	,	V_247
dissect_dynamic	,	F_12
"elf.sh_flags.reserved"	,	L_154
sh_entsize	,	V_160
".dynstr"	,	L_26
hf_elf64_symbol_table_size	,	V_65
hf_elf_eh_frame_hdr_binary_search_table_encoding	,	V_78
"elf.phoff"	,	L_82
"elf.symbol_table.info"	,	L_278
"elf.eh_frame.cie_id"	,	L_213
proto_register_protocol	,	F_49
"On systems for which physical addressing is relevant, this member is reserved for the segment's physical address. Because System V ignores physical addressing for application programs, this member has unspecified contents for executable files and shared objects."	,	L_121
"DW_EH_PE_omit"	,	L_298
hf_elf_shentsize	,	V_186
"The encoding format of the fde_count field. A value of DW_EH_PE_omit indicates the binary search table is not present."	,	L_265
"elf.p_type"	,	L_109
"Version"	,	L_77
"Physical Address"	,	L_119
len	,	V_159
hf_elf_blackhole_size	,	V_261
gint	,	T_1
"application/x-object"	,	L_326
"elf.sh_flags.reserved.8"	,	L_176
"elf.invalid_segment_size"	,	L_309
hf_elf_p_flags_reserved	,	V_199
expert_module	,	V_269
cfi_tree_item	,	V_86
tvb	,	V_3
"elf.eh_frame.fde.augmentation_data"	,	L_253
"Other"	,	L_282
"Entry"	,	L_59
COL_INFO	,	V_267
hf_elf_symbol_table_info_bind	,	V_60
module	,	V_268
ett_elf_fde_entry	,	V_105
"elf.eh_frame.augmentation_string"	,	L_218
strtab_offset	,	V_47
phoff	,	V_145
hf_elf_sh_flags_group	,	V_227
"A 1 byte value that identifies the version number of the frame information structure. This value shall be 1."	,	L_216
ett_symbol_table_entry	,	V_251
"Header"	,	L_15
cinfo	,	V_266
tvb_get_letoh64	,	F_14
PI_ERROR	,	V_301
program_header_tree	,	V_133
"Magic Bytes"	,	L_44
hf_elf_symbol_table_shndx	,	V_63
hf_elf_segment	,	V_215
hf_dwarf_format	,	V_11
"Reserved"	,	L_153
"Alloc Flag"	,	L_180
hf_elf64_p_align	,	V_214
"User Specific (0x%08x)"	,	L_30
FT_STRINGZ	,	V_290
" (%s)"	,	L_2
hf_elf_eh_frame_hdr_version	,	V_75
hf_elf_p_memsz	,	V_211
hf_elf_symbol_table_info	,	V_58
hf_elf_dynamic_tag	,	V_35
"elf.data_encoding"	,	L_64
segment_size	,	T_14
"Number of FDE entries"	,	L_272
sh_entry_item	,	V_136
hf_elf64_entry	,	V_177
hf_elf64_dynamic_tag	,	V_41
hf_elf_sh_addralign	,	V_245
"Element Type"	,	L_108
generated_tree	,	V_140
blackhole_tree	,	V_142
hf_elf_sh_info	,	V_244
data_encoding_vals	,	V_279
"This member tells what kind of segment this array element describes or how to interpret the array element's information."	,	L_110
"elf.sh_flags.maskproc"	,	L_151
dissect_dwarf_encoding	,	F_3
hf_elf_phoff	,	V_178
"This section requires special OS-specific processing to avoid incorrect behavior."	,	L_163
hf_elf_eh_frame_augmentation_data	,	V_122
"The lower 4 bits indicate the format of the data."	,	L_306
hf_elf_dynamic_pointer	,	V_37
g_strcmp0	,	F_39
"Segment"	,	L_24
guint8	,	T_3
ti	,	V_130
ett_elf_header	,	V_164
start_offset	,	V_99
"An absolute value that indicates the number of bytes of instructions associated with this FDE."	,	L_250
DYNAMIC_TYPE_UNSPECIFIED	,	V_30
ett_elf_info	,	V_256
overlapping_tree	,	V_141
"Length of CIE. Zero indicates a terminator, 0xffffffff means that "	,	L_207
"elf.eh_frame.fde.pc_begin"	,	L_246
"elf.cfi_extraneous_data"	,	L_313
hf_elf_file_padding	,	V_172
tvb_get_ntohl	,	F_9
hf_elf_p_filesz	,	V_209
"Type: Procesor Specific"	,	L_149
hf_elf64_sh_addr	,	V_238
tvbuff_t	,	T_4
hf_elf_entry_bytes	,	V_255
"elf.phentsize"	,	L_94
tvb_get_ntohs	,	F_18
val_to_str_ext_const	,	F_21
"Strings Flag"	,	L_170
"elf.sh_offset"	,	L_188
ett_dwarf_encoding	,	V_7
"Write Flag"	,	L_136
"elf.sh_name"	,	L_144
"elf.ehsize"	,	L_91
hf_elf_eh_frame_hdr_eh_frame_ptr	,	V_79
signed_value	,	V_95
"elf.file_padding"	,	L_72
" (%u: %s)"	,	L_5
gboolean	,	T_16
ei_invalid_segment_size	,	V_250
"This member gives the number of bytes in the memory image of the segment; it may be zero."	,	L_127
"elf.p_flags.reserved"	,	L_133
"elf.sh_addr"	,	L_186
"Segment size is larger than CFI records combined"	,	L_314
"elf.dynamic.tag"	,	L_290
"elf.dwarf.omit"	,	L_299
"An unsigned LEB128 constant that indicates which column in the rule table represents the return address of the function. Note that this column might not correspond to an actual machine register."	,	L_228
"version"	,	L_320
hf_elf_sh_addr	,	V_237
"elf.eh_frame_hdr.eh_frame_ptr_enc"	,	L_261
hf_elf_eh_frame_fde_pc_range	,	V_119
tvb_get_guint8	,	F_5
ett_binary_table_entry	,	V_82
name	,	V_52
ett_elf_cie_terminator	,	V_102
"File Offset"	,	L_113
hf_elf_dynamic_unspecified	,	V_39
hf_elf_eh_frame_hdr_exception_frame_pointer_encoding	,	V_76
"elf.p_flags.maskos"	,	L_131
"elf.eh_frame.return_address_register"	,	L_227
"Call Frame Instructions"	,	L_255
"elf.symbol_table.other"	,	L_283
BASE_DEC_HEX	,	V_288
"PC Range"	,	L_248
shstrndx	,	V_149
"An encoded value that indicates the address of the initial location associated with this FDE. The encoding format is specified in the Augmentation Data."	,	L_247
ph_entry_tree	,	V_135
"Processor Specific (0x%08x)"	,	L_29
hf_elf_sh_flags_reserved	,	V_225
hf_elf_sh_flags_link_order	,	V_229
"This member holds a section header table index link, whose interpretation depends on the section type."	,	L_195
"elf.eh_frame.code_alignment_factor"	,	L_221
gint8	,	T_7
"Virtual Address"	,	L_116
dynstr_offset	,	V_161
hf_elf64_p_offset	,	V_204
hf_elf_sh_size	,	V_241
hf_elf_sh_link	,	V_243
"Number of Entries in the Program Header Table"	,	L_96
"An unsigned LEB128 encoded value indicating the length in bytes of the Augmentation Data. This field is only present if the Augmentation String contains the character 'z'."	,	L_231
"Exception Frame Pointer"	,	L_269
segment_info_t	,	T_19
hf_elf_phentsize	,	V_184
os_abi_vals_ext	,	V_282
"elf.eh_frame.version"	,	L_215
"elf.string"	,	L_308
ei_invalid_entry_size	,	V_252
"OS NonConforming Flag"	,	L_161
ett_symbol_table_info	,	V_59
"elf.magic_bytes"	,	L_45
hf_elf_sh_flags_write	,	V_236
hf_elf_eh_frame_fde_cie_pointer	,	V_112
"application/x-coredump"	,	L_325
ENC_BIG_ENDIAN	,	V_23
"Address Alignment"	,	L_199
hf_elf64_p_memsz	,	V_212
ett_elf_segment	,	V_249
hf_elf_entry	,	V_176
segment_tree	,	V_68
"elf.eh_frame.data_alignment_factor"	,	L_224
"elf.sh_link"	,	L_194
tmp_segment	,	V_259
"Group Flag"	,	L_158
G_MAXINT	,	V_2
"elf.dynamic.unspecified"	,	L_297
efp_length	,	V_70
"The section contains data that should be writable during process execution."	,	L_184
"ELF file"	,	L_330
header_item	,	V_132
"application/x-executable"	,	L_324
hf_elf_sh_flags_alloc	,	V_235
hf_elf_p_flags_write	,	V_201
"This member holds the number of entries in the program header table. Thus the product of e_phentsize and e_phnum gives the table's size in bytes. If a file has no program header table, e_phnum holds the value zero."	,	L_98
hf_dwarf_omit	,	V_8
"This member holds the program header table's file offset in bytes. If the file has no program header table, this member holds zero."	,	L_83
BASE_EXT_STRING	,	V_281
"This value is a NUL terminated string that identifies the augmentation to the CIE or to the FDEs associated with this CIE. A zero length string indicates that no augmentation data is present. The augmentation string is case sensitive."	,	L_219
"Machine"	,	L_75
"Overlapping size between sections or program headers"	,	L_57
FT_UINT64	,	V_287
hf_elf_p_flags_processor_specific	,	V_197
"ABI Version"	,	L_69
proto_tree_add_uint_format	,	F_41
"Some sections hold a table of fixed-size entries, such as a symbol table. For such a section, this member gives the size in bytes of each entry. The member contains 0 if the section does not hold a table of fixed-size entries."	,	L_204
hf_elf_p_type_processor_specific	,	V_193
"This member gives the virtual address at which the first byte of the segment resides in memory."	,	L_118
"Some sections have address alignment constraints. Currently, only 0 and positive integral powers of two are allowed. Values 0 and 1 mean the section has no alignment constraints."	,	L_201
item	,	V_5
"File size"	,	L_46
hf_elf_eh_frame_data_alignment_factor	,	V_116
"DWARF Exception Header value format"	,	L_304
proto_item_append_text	,	F_15
hf_elf_sh_flags_strings	,	V_231
hf_elf64_sh_offset	,	V_240
"Initial Instructions"	,	L_235
"elf.p_offset"	,	L_114
"CIE Pointer"	,	L_242
lengths_size	,	V_89
col_clear	,	F_43
"elf.machine"	,	L_76
hf_elf_sh_flags_os_nonconforming	,	V_228
hf_elf_eh_frame_hdr_fde_count_encoding	,	V_77
"This member gives the virtual address to which the system first transfers control, thus starting the process. If the file has no associated entry point, this member holds zero. "	,	L_80
proto_register_subtree_array	,	F_52
table_tree	,	V_69
"elf.sh_flags.os_nonconforming"	,	L_162
"This member holds the number of entries in the section header table. Thus the product of e_shentsize and e_shnum gives the section header table's size in bytes. If a file has no section header table, e_shnum holds the value zero."	,	L_104
LENGTH_ULEB128	,	V_14
sh_type_vals_ext	,	V_221
proto_tree_add_item	,	F_6
hf_elf_sh_offset	,	V_239
"Version of file-format supported by this dissector."	,	L_322
pinfo	,	T_12
segment_item	,	V_138
hf_elf_sh_type_operating_system_specific	,	V_218
_U_	,	V_24
hf_elf_magic_bytes	,	V_165
new_register_dissector	,	F_53
hf_elf_dynamic_value	,	V_36
hf_elf64_p_paddr	,	V_208
i_entry	,	V_74
"elf.shstrndx"	,	L_106
"elf.eh_frame.fde.length"	,	L_238
"media_type"	,	L_323
gint64	,	T_15
"ELF"	,	L_318
".eh_frame"	,	L_32
"File Class"	,	L_61
machine_vals_ext	,	V_286
"elf.symbol_table.shndx"	,	L_285
PI_PROTOCOL	,	V_298
"The data in the section may be merged to eliminate duplication."	,	L_175
FT_UINT8	,	V_276
"Backholes"	,	L_38
proto_item	,	T_5
"SectionHeader"	,	L_19
expert_register_field_array	,	F_57
main_tree	,	V_128
section_header_tree	,	V_134
dissector_add_string	,	F_59
"An unsigned LEB128 encoded value indicating the length in bytes of the Augmentation Data."	,	L_252
"elf.blackholes_size"	,	L_51
"elf.symbol_table.value"	,	L_287
"This member holds processor-specific flags associated with the file. Flag names take the form EF_machine_flag."	,	L_89
"Unspecified"	,	L_296
ENC_LITTLE_ENDIAN	,	V_168
hf_elf_eh_frame_version	,	V_113
"Pointer"	,	L_292
"elf.phnum"	,	L_97
magic	,	V_127
hf_elf_blackholes_size	,	V_265
"This member's value gives the byte offset from the beginning of the file to the first byte in the section. One section type, SHT_NOBITS, occupies no space in the file, and its sh_offset member locates the conceptual placement in the file."	,	L_189
"A set of Call Frame Instructions."	,	L_257
data	,	T_18
"Total blackholes size"	,	L_50
hf_elf_eh_frame_fde_length	,	V_107
DYNAMIC_TYPE_VALUE	,	V_27
dissect_eh_frame	,	F_27
"Overlapping"	,	L_39
hf_elf_symbol_table_size	,	V_57
"elf.dynamic.ignored"	,	L_295
cfi_number	,	V_100
hf_elf64_sh_addralign	,	V_246
"Number of Entries in the Section Header Table"	,	L_102
"elf.eh_frame_hdr.fde_count_enc"	,	L_264
LENGTH_LEB128	,	V_15
"elf.symbol_table.size"	,	L_288
hf_elf_abi_version	,	V_171
hf_elf_sh_flags_reserved_8	,	V_233
"Section Header Table File Offset"	,	L_84
shnum	,	V_17
ei_register_info	,	T_23
"elf.segment"	,	L_58
hf_elf_shnum	,	V_187
"(ELF)"	,	L_43
tvb_get_letohl	,	F_10
"This member holds extra information, whose interpretation depends on the section type."	,	L_198
tag	,	V_31
ett_elf_section_header	,	V_190
"PC Begin"	,	L_245
tvb_get_letohs	,	F_19
hf_elf_eh_frame_cie_id	,	V_111
fde_count_length	,	V_71
"elf.sh_type"	,	L_146
offset	,	V_4
"A 4 byte unsigned value that when subtracted from the offset of the the CIE Pointer in the current FDE yields the offset of the start of the associated CIE. This value shall never be 0."	,	L_244
"Element Type: Operating System Specific"	,	L_111
"CIE length is too small or larger than segment size"	,	L_316
"Section Header Table [%d entries]"	,	L_17
expert_module_t	,	T_21
tree	,	V_6
format	,	V_12
hf_elf_sh_type_processor_specific	,	V_219
get_dwarf_extension_length	,	F_7
DYNAMIC_TYPE_POINTER	,	V_28
hf_elf64_symbol_table_value	,	V_64
tvb_get_ntoh64	,	F_13
hf_elf_p_align	,	V_213
"elf.sh_size"	,	L_191
sh_entry_tree	,	V_137
hf_elf_p_type_operating_system_specific	,	V_192
cfi_tree	,	V_85
hf_elf_p_flags_operating_system_specific	,	V_198
"Data Encoding"	,	L_63
proto_tree_add_uint	,	F_42
"Start of .eh_frame pointer"	,	L_271
"elf.symbol_table.info.bind"	,	L_280
eh_dwarf_format	,	V_296
" (%u)"	,	L_6
"Data as described by the Augmentation String in the CIE."	,	L_254
elf_handle	,	V_303
"Initial set of Call Frame Instructions."	,	L_237
proto_tree_add_uint64	,	F_30
"Call Frame Information Entry %i"	,	L_12
"elf.eh_frame_hdr.fde_count"	,	L_273
shstrtab_offset	,	V_20
"Overlapping between: %s and %s, size: %u"	,	L_41
"elf.overlapping_size"	,	L_56
value	,	V_1
"Align"	,	L_140
hf_elf_symbol_table_other	,	V_62
entry_number	,	V_101
"Common Information Entry"	,	L_13
fde_count	,	V_73
"elf.p_flags.maskproc"	,	L_129
"Link Order Flag"	,	L_164
"elf.sh_addralign"	,	L_200
symbol_table_shndx_rvals	,	V_294
"Augmentation Length"	,	L_229
hf_elf64_dynamic_unspecified	,	V_46
"This member holds the section header table's file offset in bytes. If the file has no section header table, this member holds zero."	,	L_86
"elf.dwarf.upper"	,	L_302
proto_item_set_len	,	F_28
"Frame Description Entry %i"	,	L_14
hf_elf_overlapping_size	,	V_262
"Blackhole between: %s and %s, size: %u"	,	L_40
"elf.abi_version"	,	L_70
hf_elf_p_flags_execute	,	V_202
"Size"	,	L_190
"Code Alignment Factor"	,	L_220
"Exception Frame Pointer Encoding"	,	L_260
"Type"	,	L_73
"Memory Image Size"	,	L_125
proto_tree	,	T_6
