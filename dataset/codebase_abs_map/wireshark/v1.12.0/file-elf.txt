symbol_table_info_type_vals_ext	,	V_67
ett_elf_overlapping	,	V_251
"Entry size is different then currently parsed bytes"	,	L_290
p_type_vals	,	V_190
hf_elf_eh_frame_fde_call_frame_instructions	,	V_119
"elf.shentsize"	,	L_87
"Info"	,	L_183
REGISTER_64_SIZE	,	V_192
hf_elf_file_class	,	V_163
ett_elf_entry	,	V_111
"elf.sh_info"	,	L_184
entry_item	,	V_26
"elf.sh_flags.group"	,	L_146
"This section holds Thread-Local Storage, meaning that each separate execution flow has its own distinct instance of this data. Implementations need not support this flag."	,	L_144
"Data Alignment Factor"	,	L_205
hf_dwarf_upper	,	V_10
segment_offset	,	V_147
table_entry_length	,	V_73
hf_elf_eh_frame_hdr_binary_search_table_entry_initial_location	,	V_84
guint32	,	T_10
"A 4 byte unsigned value indicating the length in bytes of the CIE structure, not including the Length field itself. If Length contains the value 0xffffffff, then the length is contained in the Extended Length field. If Length contains the value 0, then this CIE shall be considered a terminator and processing shall end."	,	L_194
FT_BOOLEAN	,	V_276
"ProgramHeader"	,	L_16
shentsize	,	V_18
"FDE Count Encoding"	,	L_242
hf_elf_symbol_table_name_index	,	V_55
"elf.entry"	,	L_66
" (Number: %u, Index: %u, Length: %u)"	,	L_33
"Section Name. Its value is an index into the section header string table section, giving the location of a null-terminated string."	,	L_132
"ftap_encap"	,	L_302
"Augmentation String"	,	L_200
size	,	V_92
"Frame Description Entries"	,	L_11
"The section contains executable machine instructions."	,	L_166
"elf.invalid_entry_size"	,	L_289
array_length	,	F_47
"The upper 4 bits indicate how the value is to be applied."	,	L_281
hf_elf_sh_name	,	V_211
ett_elf_black_holes	,	V_250
"Entry Size in Program Header Table"	,	L_80
"Merge Flag"	,	L_160
"A signed LEB128 encoded value that is factored out of all offset instructions that are associated with this CIE or its FDEs. This value shall be multiplied by the register offset argument of an offset instruction to obtain the new offset value."	,	L_207
record_tree	,	V_86
ENC_ASCII	,	V_248
"Type: Operating System Specific"	,	L_135
ett_binary_table	,	V_82
hf_elf_version	,	V_172
info_bind	,	V_53
hf_elf_phnum	,	V_182
dissect_symbol_table	,	F_17
"Info Link Flag"	,	L_154
ett_elf	,	V_160
"elf.eh_frame.fde.pc_range"	,	L_228
hf_register_info	,	T_22
".eh_frame_hdr"	,	L_31
"Total blackholes size: %i"	,	L_43
"Return Address Register"	,	L_208
"elf.eh_frame_hdr.binary_search_table_encoding"	,	L_246
guint16	,	T_9
tag_to_type	,	V_32
" (Bind: %s, Type: %s)"	,	L_7
tvb_get_const_stringz	,	F_11
sh_name	,	V_22
": %s"	,	L_4
p_offset	,	V_149
i	,	V_153
"File Padding"	,	L_57
"Entry #%d "	,	L_34
"FDE Count"	,	L_250
"Type: User Specific"	,	L_137
RVALS	,	F_44
"Entry #%d: Processor Specific (0x%08x)"	,	L_19
"elf.sh_flags.merge"	,	L_161
tvb_memeql	,	F_31
hf_elf_sh_flags_operating_system_specific	,	V_218
hf_elf64_sh_entsize	,	V_242
"The sh_info field of this section header holds a section header table index."	,	L_156
BASE_NONE	,	V_260
hf_elf_dynamic_ignored	,	V_38
dynamic_tag_rvals	,	V_42
hf_elf_eh_frame_return_address_register	,	V_106
"elf.eh_frame.initial_instructions"	,	L_218
".strtab"	,	L_23
"elf.sh_entsize"	,	L_190
"elf.shnum"	,	L_90
shoff	,	V_16
"This member gives the offset from the beginning of the file at which the first byte of the segment resides."	,	L_102
"Program Header Table [%d entries]"	,	L_14
header_tree	,	V_123
"elf.os_abi"	,	L_54
"elf.p_vaddr"	,	L_104
"elf.eh_frame_hdr.version"	,	L_237
"Header size + all segment size: %i"	,	L_42
"elf"	,	L_293
"elf.sh_flags.alloc"	,	L_168
value_guard	,	F_1
hf_elf64_shoff	,	V_178
hf_elf_ehsize	,	V_180
BASE_HEX	,	V_263
"elf.dynamic.value"	,	L_269
PROTO_ITEM_SET_GENERATED	,	F_38
col_add_str	,	F_40
"ELF Header Size"	,	L_77
"Binary Search Table Encoding"	,	L_245
proto_item_add_subtree	,	F_4
"elf.sh_flags.strings"	,	L_158
module_t	,	T_20
"Infos"	,	L_35
"elf.eh_frame.augmentation_data"	,	L_215
proto_register_field_array	,	F_46
"Entry #%d: "	,	L_25
FT_BYTES	,	V_259
hf_elf64_dynamic_pointer	,	V_44
proto_reg_handoff_elf	,	F_54
"elf.type"	,	L_60
"A block of data whose contents are defined by the contents of the Augmentation String in the associated CIE as described above. This field is only present if the Augmentation String in the associated CIE contains the character 'z'. The size of this data is given by the Augentation Length."	,	L_233
"ELF version: 4.1 DRAFT"	,	L_295
ei	,	V_285
"application/x-sharedlib"	,	L_301
"An unsigned LEB128 encoded value indicating the length in bytes of the Augmentation Data. This field is only present if the Augmentation String in the associated CIE contains the character 'z'."	,	L_231
dissector_add_uint	,	F_56
hf_elf_sh_flags_merge	,	V_226
"elf.p_filesz"	,	L_110
"elf.sh_flags.link_order"	,	L_152
"Link Index"	,	L_180
hf_elf_symbol_table_value	,	V_56
FT_UINT16	,	V_270
hf_elf_eh_frame_augmentation_length	,	V_107
hf_elf_p_vaddr	,	V_201
sh_type	,	V_145
dissect_elf_heur	,	F_41
"Operating System Specific (0x%08x)"	,	L_26
hf_elf_eh_frame_augmentation_string	,	V_103
"Address"	,	L_172
"Entry #%d"	,	L_32
record_item	,	V_87
"This member holds the ELF header's size in bytes."	,	L_79
hf_elf_os_abi	,	V_167
hf_elf_data_encoding	,	V_164
hf_elf_sh_flags_processor_specific	,	V_217
expert_add_info	,	F_37
"Name Index"	,	L_130
"The encoding format of the entries in the binary search table. A value of DW_EH_PE_omit indicates the binary search table is not present."	,	L_247
heur_dissector_add	,	F_57
"Program Header Table File Offset"	,	L_68
"Releated Section Header Index"	,	L_262
"An unsigned LEB128 encoded value that is factored out of all advance location instructions that are associated with this CIE or its FDEs. This value shall be multiplied by the delta argument of an adavance location instruction to obtain the new location value."	,	L_204
ett_elf_fde	,	V_110
"Operating System Specific Flags"	,	L_117
hf_elf_flags	,	V_179
phnum	,	V_141
"If the section will appear in the memory image of a process, this member gives the address at which the section's first byte should reside. Otherwise, the member contains 0."	,	L_174
symbol_table_info_bind_vals	,	V_66
hf_elf_eh_frame_fde_extended_length	,	V_113
"elf.p_memsz"	,	L_113
"Entry #%d: Operating System Specific (0x%08x)"	,	L_18
main_item	,	V_122
proto_register_elf	,	F_42
min_offset_segment	,	V_253
val_to_str_const	,	F_20
length	,	V_88
"elf.eh_frame_hdr.binary_search_table_entry.address"	,	L_254
"This member gives the value to which the segments are aligned in memory and in the file. Values 0 and 1 mean no alignment is required. Otherwise, p_align should be a positive, integral power of 2, and p_vaddr should equal p_offset, modulo p_align."	,	L_129
PI_WARN	,	V_287
"DWARF Exception Header application"	,	L_279
hf_elf_type	,	V_170
"TLS Flag"	,	L_142
FT_UINT32	,	V_273
hf_elf_sh_type_user_specific	,	V_214
phentsize	,	V_140
guint64	,	T_2
hf	,	V_258
area_counter	,	V_151
"Read Flag"	,	L_121
augmentation_string	,	V_94
hf_elf_p_paddr	,	V_203
BASE_HEX_DEC	,	V_269
MAX_TAG_TO_TYPE	,	V_33
hf_elf_eh_frame_fde_augmentation_length	,	V_117
"Reserrved Flags"	,	L_119
hf_elf_p_offset	,	V_199
"This member holds the size in bytes of one entry in the file's program header table; all entries are the same size."	,	L_82
"Tag"	,	L_267
"Segment size is different then currently parsed bytes"	,	L_288
prefs_register_protocol	,	F_50
dissect_eh_frame_hdr	,	F_22
"elf.p_flags.write"	,	L_124
wmem_strdup_printf	,	F_35
get_section_name_offset	,	F_8
hf_elf_sh_type	,	V_216
BASE_RANGE_STRING	,	V_281
"Flags"	,	L_74
dissect_uleb128	,	F_23
"Exec Instr Flag"	,	L_164
hf_elf_string	,	V_247
"This flag adds special ordering requirements for link editors."	,	L_153
"elf.sh_flags.exec_instr"	,	L_165
"Ignored"	,	L_272
DYNAMIC_TYPE_IGNORED	,	V_29
"This member holds the section header table index of the entry associated with the section name string table. If the file has no section name string table, this member holds the value SHN_UNDEF."	,	L_94
hf_elf_symbol_table_info_type	,	V_61
hf_elf_sh_flags_exec_instr	,	V_228
"Processor Specific Flags"	,	L_115
augmentation_string_length	,	V_93
"elf.flags"	,	L_75
"Binary Search Table"	,	L_8
"Entry Size"	,	L_189
"Entry Size in Section Header Table"	,	L_86
"elf.eh_frame_hdr.eh_frame_ptr"	,	L_249
p_type	,	V_144
register_size	,	V_13
is_extended_length	,	V_95
"File Version"	,	L_51
"elf.p_paddr"	,	L_107
"elf.eh_frame.fde.augmentation_length"	,	L_230
"elf.shoff"	,	L_72
info_type	,	V_54
proto_tree_add_int64	,	F_28
"OS ABI"	,	L_53
"The data elements in the section consist of null-terminated character strings. The size of each character is specified in the section header's sh_entsize field."	,	L_159
hf_elf_file_version	,	V_166
"Value"	,	L_264
"A 4 byte unsigned value that is used to distinguish CIE records from FDE records. This value shall always be 0, which indicates this record is a CIE."	,	L_197
"ProgramHeaderEntry #%u"	,	L_21
name_index	,	V_50
hf_elf_shstrndx	,	V_185
"String"	,	L_285
"elf.sh_flags.maskos"	,	L_139
VALS	,	F_43
hf_elf_p_type	,	V_191
"elf.eh_frame_hdr.binary_search_table_entry.initial_location"	,	L_253
"Bind"	,	L_257
next_offset	,	V_155
info_item	,	V_48
unsigned_value	,	V_90
hf_elf_eh_frame_initial_instructions	,	V_109
"elf.sh_flags.info_link"	,	L_155
"This member gives the section's size in bytes."	,	L_179
prefs_register_static_text_preference	,	F_51
"Executable and Linkable Format"	,	L_291
section_name	,	V_51
dissect_leb128	,	F_24
tvb_length	,	F_30
hf_elf_eh_frame_hdr_fde_count	,	V_81
proto_tree_add_text	,	F_25
"This member holds a section header's size in bytes. A section header is one entry in the section header table; all entries are the same size."	,	L_88
BASE_DEC	,	V_278
class_vals	,	V_264
"elf.eh_frame.length"	,	L_193
ehsize	,	V_150
"Exeption Frame Pointer Encoding"	,	L_239
file_size	,	V_148
ENC_NA	,	V_9
"Binary Table Entry #%u"	,	L_9
"elf.file_version"	,	L_52
rval_to_str	,	F_16
"Version of the .eh_frame_hdr format. This value shall be 1."	,	L_238
hf_elf64_dynamic_value	,	V_43
"Initial location"	,	L_252
"Entry #%d: %s"	,	L_20
"elf.sh_flags.write"	,	L_170
REGISTER_32_SIZE	,	V_34
wmem_alloc	,	F_33
FT_INT64	,	V_279
hf_elf64_p_vaddr	,	V_202
hf_elf64_sh_size	,	V_236
"%s"	,	L_29
"File Image Size"	,	L_109
shndx	,	V_19
"Entry %i"	,	L_12
"elf.file_class"	,	L_48
i_16	,	V_143
"Blackhole between: %s and &lt;EOF&gt;, size: %u"	,	L_40
proto_elf	,	V_159
entry_tree	,	V_25
hf_elf_machine	,	V_171
symbol_table_other_vals	,	V_280
enum_tag_type	,	T_13
i_next	,	V_154
"elf.p_flags.read"	,	L_122
"CIE ID"	,	L_195
expert_register_protocol	,	F_52
hf_elf_sh_flags_info_link	,	V_224
version_vals	,	V_266
"The section occupies memory during process execution. Some control sections do not reside in the memory image of an object file; this attribute is off for those sections."	,	L_169
dissect_elf	,	F_29
hf_elf64_dynamic_ignored	,	V_45
"This section is a member (perhaps the only one) of a section group."	,	L_147
"elf.symbol_table.info.type"	,	L_259
type_vals	,	V_271
"elf.dwarf.format"	,	L_283
guint	,	T_8
"Length"	,	L_192
ett	,	V_289
DISSECTOR_ASSERT_HINT	,	F_2
"Too big file - not supported"	,	L_1
wmem_packet_scope	,	F_34
hf_elf_eh_frame_fde_augmentation_data	,	V_118
hf_elf_eh_frame_code_alignment_factor	,	V_104
hf_elf_sh_flags_tls	,	V_220
hf_elf_eh_frame_length	,	V_99
packet_info	,	T_11
hf_elf_eh_frame_extended_length	,	V_100
"Used to indicate that no value is present."	,	L_278
"Element Type: Processor Specific"	,	L_99
eh_dwarf_upper	,	V_283
hf_elf_shoff	,	V_177
hf_elf_eh_frame_hdr_binary_search_table_entry_address	,	V_85
"elf.eh_frame.augmentation_length"	,	L_212
EXPFILL	,	V_288
"elf.eh_frame.fde.cie_pointer"	,	L_222
generated_item	,	V_134
"elf.eh_frame.fde.call_frame_instructions"	,	L_235
"Execute Flag"	,	L_125
ett_elf_program_header	,	V_186
"A block of data whose contents are defined by the contents of the Augmentation String as described below. This field is only present if the Augmentation String contains the character 'z'."	,	L_216
pitem	,	V_40
"File size: %i"	,	L_41
"elf.p_align"	,	L_128
"elf.dynamic.pointer"	,	L_271
hf_elf_eh_frame_fde_pc_begin	,	V_115
HFILL	,	V_261
"This member categorizes the section's contents and semantics."	,	L_134
segment_info	,	V_152
"elf.p_flags.execute"	,	L_126
hf_elf64_phoff	,	V_176
info_tree	,	V_49
"Section Header Table String Index"	,	L_92
gchar	,	T_19
hf_elf_p_flags_read	,	V_196
"wtap_file"	,	L_303
"elf.sh_flags.tls"	,	L_143
"elf.version"	,	L_64
"Augmentation Data"	,	L_214
hf_elf64_p_filesz	,	V_206
machine_encoding	,	V_21
"This member gives the number of bytes in the file image of the segment; it may be zero."	,	L_111
"The encoding format of the eh_frame_ptr field."	,	L_241
"elf.symbol_table.name_index"	,	L_255
"Unknown"	,	L_3
hf_elf_sh_entsize	,	V_241
dissect_dynamic	,	F_12
"elf.sh_flags.reserved"	,	L_141
sh_entsize	,	V_157
".dynstr"	,	L_24
hf_elf64_symbol_table_size	,	V_65
overlapping_item	,	V_136
hf_elf_eh_frame_hdr_binary_search_table_encoding	,	V_79
"elf.phoff"	,	L_69
"elf.symbol_table.info"	,	L_256
"elf.eh_frame.cie_id"	,	L_196
proto_register_protocol	,	F_45
"On systems for which physical addressing is relevant, this member is reserved for the segment's physical address. Because System V ignores physical addressing for application programs, this member has unspecified contents for executable files and shared objects."	,	L_108
"DW_EH_PE_omit"	,	L_276
hf_elf_shentsize	,	V_183
"The encoding format of the fde_count field. A value of DW_EH_PE_omit indicates the binary search table is not present."	,	L_244
"elf.p_type"	,	L_96
"Version"	,	L_63
"Physical Address"	,	L_106
len	,	V_156
gint	,	T_1
"application/x-object"	,	L_300
"elf.sh_flags.reserved.8"	,	L_163
"elf.invalid_segment_size"	,	L_287
hf_elf_p_flags_reserved	,	V_195
expert_module	,	V_257
tvb	,	V_3
"elf.eh_frame.fde.augmentation_data"	,	L_232
"Other"	,	L_260
"Entry"	,	L_65
COL_INFO	,	V_255
hf_elf_symbol_table_info_bind	,	V_60
module	,	V_256
strtab_offset	,	V_47
phoff	,	V_142
hf_elf_sh_flags_group	,	V_221
"A 1 byte value that identifies the version number of the frame information structure. This value shall be 1."	,	L_199
ett_symbol_table_entry	,	V_245
"Header"	,	L_13
cinfo	,	V_254
tvb_get_letoh64	,	F_14
program_header_tree	,	V_126
"Magic Bytes"	,	L_45
hf_elf_symbol_table_shndx	,	V_63
hf_dwarf_format	,	V_11
"Reserved"	,	L_140
"Alloc Flag"	,	L_167
hf_elf64_p_align	,	V_210
length_remaining	,	V_89
"User Specific (0x%08x)"	,	L_28
FT_STRINGZ	,	V_277
" (%s)"	,	L_2
hf_elf_eh_frame_hdr_version	,	V_76
hf_elf_p_memsz	,	V_207
hf_elf_symbol_table_info	,	V_58
hf_elf_dynamic_tag	,	V_35
"elf.data_encoding"	,	L_50
segment_size	,	T_14
ph_entry_item	,	V_129
sh_entry_item	,	V_131
hf_elf64_entry	,	V_174
hf_elf64_dynamic_tag	,	V_41
hf_elf_sh_addralign	,	V_239
"Element Type"	,	L_95
generated_tree	,	V_135
blackhole_tree	,	V_139
hf_elf_sh_info	,	V_238
data_encoding_vals	,	V_265
"This member tells what kind of segment this array element describes or how to interpret the array element's information."	,	L_97
"elf.sh_flags.maskproc"	,	L_138
dissect_dwarf_encoding	,	F_3
hf_elf_phoff	,	V_175
"This section requires special OS-specific processing to avoid incorrect behavior."	,	L_150
hf_elf_eh_frame_augmentation_data	,	V_108
"The lower 4 bits indicate the format of the data."	,	L_284
hf_elf_dynamic_pointer	,	V_37
g_strcmp0	,	F_36
"Segment"	,	L_22
guint8	,	T_3
ett_elf_header	,	V_161
start_offset	,	V_96
"An absolute value that indicates the number of bytes of instructions associated with this FDE."	,	L_229
DYNAMIC_TYPE_UNSPECIFIED	,	V_30
ett_elf_info	,	V_249
overlapping_tree	,	V_137
"elf.eh_frame.fde.pc_begin"	,	L_225
hf_elf_file_padding	,	V_169
tvb_get_ntohl	,	F_9
hf_elf_p_filesz	,	V_205
"Type: Procesor Specific"	,	L_136
hf_elf64_sh_addr	,	V_232
tvbuff_t	,	T_4
"elf.phentsize"	,	L_81
tvb_get_ntohs	,	F_18
val_to_str_ext_const	,	F_21
"Strings Flag"	,	L_157
"elf.sh_offset"	,	L_175
ett_dwarf_encoding	,	V_7
"Write Flag"	,	L_123
"elf.sh_name"	,	L_131
"elf.ehsize"	,	L_78
hf_elf_eh_frame_hdr_eh_frame_ptr	,	V_80
signed_value	,	V_91
"elf.file_padding"	,	L_58
" (%u: %s)"	,	L_5
gboolean	,	T_16
program_header_item	,	V_125
ei_invalid_segment_size	,	V_244
"This member gives the number of bytes in the memory image of the segment; it may be zero."	,	L_114
"elf.p_flags.reserved"	,	L_120
"elf.sh_addr"	,	L_173
"elf.dynamic.tag"	,	L_268
"elf.dwarf.omit"	,	L_277
"An unsigned LEB128 constant that indicates which column in the rule table represents the return address of the function. Note that this column might not correspond to an actual machine register."	,	L_210
"version"	,	L_294
table_item	,	V_69
hf_elf_sh_addr	,	V_231
"elf.eh_frame_hdr.eh_frame_ptr_enc"	,	L_240
hf_elf_eh_frame_fde_pc_range	,	V_116
tvb_get_guint8	,	F_5
ett_binary_table_entry	,	V_83
name	,	V_52
"File Offset"	,	L_100
hf_elf_dynamic_unspecified	,	V_39
hf_elf_eh_frame_hdr_exception_frame_pointer_encoding	,	V_77
"elf.p_flags.maskos"	,	L_118
"elf.eh_frame.return_address_register"	,	L_209
"Call Frame Instructions"	,	L_234
"elf.symbol_table.other"	,	L_261
BASE_DEC_HEX	,	V_275
"PC Range"	,	L_227
shstrndx	,	V_146
"An encoded value that indicates the address of the initial location associated with this FDE. The encoding format is specified in the Augmentation Data."	,	L_226
ph_entry_tree	,	V_130
"Processor Specific (0x%08x)"	,	L_27
hf_elf_sh_flags_reserved	,	V_219
hf_elf_sh_flags_link_order	,	V_223
"This member holds a section header table index link, whose interpretation depends on the section type."	,	L_182
"elf.eh_frame.code_alignment_factor"	,	L_203
gint8	,	T_7
"Virtual Address"	,	L_103
dynstr_offset	,	V_158
hf_elf64_p_offset	,	V_200
hf_elf_sh_size	,	V_235
hf_elf_sh_link	,	V_237
"Number of Entries in the Program Header Table"	,	L_83
"An unsigned LEB128 encoded value indicating the length in bytes of the Augmentation Data. This field is only present if the Augmentation String contains the character 'z'."	,	L_213
segment_info_t	,	T_18
hf_elf_phentsize	,	V_181
os_abi_vals_ext	,	V_268
"elf.eh_frame.version"	,	L_198
"elf.string"	,	L_286
ei_invalid_entry_size	,	V_246
"OS NonConforming Flag"	,	L_148
ett_symbol_table_info	,	V_59
blackhole_item	,	V_138
"elf.magic_bytes"	,	L_46
hf_elf_sh_flags_write	,	V_230
hf_elf_eh_frame_fde_cie_pointer	,	V_114
"application/x-coredump"	,	L_299
ENC_BIG_ENDIAN	,	V_23
"Address Alignment"	,	L_186
hf_elf64_p_memsz	,	V_208
ett_elf_segment	,	V_243
hf_elf_entry	,	V_173
segment_tree	,	V_68
"elf.eh_frame.data_alignment_factor"	,	L_206
"elf.sh_link"	,	L_181
tmp_segment	,	V_252
"Group Flag"	,	L_145
G_MAXINT	,	V_2
"elf.dynamic.unspecified"	,	L_275
efp_length	,	V_71
"The section contains data that should be writable during process execution."	,	L_171
header_item	,	V_124
"application/x-executable"	,	L_298
hf_elf_sh_flags_alloc	,	V_229
hf_elf_p_flags_write	,	V_197
"This member holds the number of entries in the program header table. Thus the product of e_phentsize and e_phnum gives the table's size in bytes. If a file has no program header table, e_phnum holds the value zero."	,	L_85
hf_dwarf_omit	,	V_8
"This member holds the program header table's file offset in bytes. If the file has no program header table, this member holds zero."	,	L_70
BASE_EXT_STRING	,	V_267
"This value is a NUL terminated string that identifies the augmentation to the CIE or to the FDEs associated with this CIE. A zero length string indicates that no augmentation data is present. The augmentation string is case sensitive."	,	L_201
"Machine"	,	L_61
FT_UINT64	,	V_274
hf_elf_p_flags_processor_specific	,	V_193
"ABI Version"	,	L_55
"Some sections hold a table of fixed-size entries, such as a symbol table. For such a section, this member gives the size in bytes of each entry. The member contains 0 if the section does not hold a table of fixed-size entries."	,	L_191
hf_elf_p_type_processor_specific	,	V_189
"This member gives the virtual address at which the first byte of the segment resides in memory."	,	L_105
"Some sections have address alignment constraints. Currently, only 0 and positive integral powers of two are allowed. Values 0 and 1 mean the section has no alignment constraints."	,	L_188
item	,	V_5
hf_elf_eh_frame_data_alignment_factor	,	V_105
"DWARF Exception Header value format"	,	L_282
proto_item_append_text	,	F_15
hf_elf_sh_flags_strings	,	V_225
hf_elf64_sh_offset	,	V_234
"Initial Instructions"	,	L_217
"elf.p_offset"	,	L_101
"CIE Pointer"	,	L_221
col_clear	,	F_39
"elf.machine"	,	L_62
hf_elf_sh_flags_os_nonconforming	,	V_222
hf_elf_eh_frame_hdr_fde_count_encoding	,	V_78
"This member gives the virtual address to which the system first transfers control, thus starting the process. If the file has no associated entry point, this member holds zero. "	,	L_67
proto_register_subtree_array	,	F_48
table_tree	,	V_70
"elf.sh_flags.os_nonconforming"	,	L_149
"This member holds the number of entries in the section header table. Thus the product of e_shentsize and e_shnum gives the section header table's size in bytes. If a file has no section header table, e_shnum holds the value zero."	,	L_91
LENGTH_ULEB128	,	V_14
sh_type_vals_ext	,	V_215
proto_tree_add_item	,	F_6
hf_elf_sh_offset	,	V_233
"Version of file-format supported by this dissector."	,	L_296
pinfo	,	T_12
segment_item	,	V_133
hf_elf_sh_type_operating_system_specific	,	V_212
_U_	,	V_24
hf_elf_magic_bytes	,	V_162
new_register_dissector	,	F_49
hf_elf_dynamic_value	,	V_36
hf_elf64_p_paddr	,	V_204
i_entry	,	V_75
"elf.shstrndx"	,	L_93
"elf.eh_frame.fde.length"	,	L_220
"media_type"	,	L_297
gint64	,	T_15
"ELF"	,	L_292
".eh_frame"	,	L_30
"File Class"	,	L_47
machine_vals_ext	,	V_272
"elf.symbol_table.shndx"	,	L_263
PI_PROTOCOL	,	V_286
"The data in the section may be merged to eliminate duplication."	,	L_162
FT_UINT8	,	V_262
"Backholes"	,	L_36
proto_item	,	T_5
"SectionHeader"	,	L_17
expert_register_field_array	,	F_53
main_tree	,	V_121
section_header_tree	,	V_128
dissector_add_string	,	F_55
"elf.symbol_table.value"	,	L_265
"This member holds processor-specific flags associated with the file. Flag names take the form EF_machine_flag."	,	L_76
ett_elf_cie	,	V_98
"Unspecified"	,	L_274
ENC_LITTLE_ENDIAN	,	V_165
hf_elf_eh_frame_version	,	V_102
"Pointer"	,	L_270
"elf.phnum"	,	L_84
magic	,	V_120
"This member's value gives the byte offset from the beginning of the file to the first byte in the section. One section type, SHT_NOBITS, occupies no space in the file, and its sh_offset member locates the conceptual placement in the file."	,	L_176
"A set of Call Frame Instructions."	,	L_236
data	,	T_17
hf_elf_eh_frame_fde_length	,	V_112
DYNAMIC_TYPE_VALUE	,	V_27
dissect_eh_frame	,	F_26
"Overlapping"	,	L_37
hf_elf_symbol_table_size	,	V_57
"elf.dynamic.ignored"	,	L_273
hf_elf64_sh_addralign	,	V_240
"Number of Entries in the Section Header Table"	,	L_89
"elf.eh_frame_hdr.fde_count_enc"	,	L_243
LENGTH_LEB128	,	V_15
"elf.symbol_table.size"	,	L_266
hf_elf_abi_version	,	V_168
hf_elf_sh_flags_reserved_8	,	V_227
"Section Header Table File Offset"	,	L_71
shnum	,	V_17
ei_register_info	,	T_23
hf_elf_shnum	,	V_184
"(ELF)"	,	L_44
tvb_get_letohl	,	F_10
"This member holds extra information, whose interpretation depends on the section type."	,	L_185
tag	,	V_31
ett_elf_section_header	,	V_187
"PC Begin"	,	L_224
tvb_get_letohs	,	F_19
hf_elf_eh_frame_cie_id	,	V_101
fde_count_length	,	V_72
"elf.sh_type"	,	L_133
offset	,	V_4
"A 4 byte unsigned value that when subtracted from the offset of the the CIE Pointer in the current FDE yields the offset of the start of the associated CIE. This value shall never be 0."	,	L_223
"Element Type: Operating System Specific"	,	L_98
"Section Header Table [%d entries]"	,	L_15
expert_module_t	,	T_21
tree	,	V_6
format	,	V_12
hf_elf_sh_type_processor_specific	,	V_213
get_dwarf_extension_length	,	F_7
DYNAMIC_TYPE_POINTER	,	V_28
hf_elf64_symbol_table_value	,	V_64
tvb_get_ntoh64	,	F_13
hf_elf_p_align	,	V_209
"elf.sh_size"	,	L_178
sh_entry_tree	,	V_132
hf_elf_p_type_operating_system_specific	,	V_188
hf_elf_p_flags_operating_system_specific	,	V_194
"Data Encoding"	,	L_49
"elf.symbol_table.info.bind"	,	L_258
eh_dwarf_format	,	V_284
" (%u)"	,	L_6
"Exeption Frame Pointer"	,	L_248
elf_handle	,	V_290
"Initial set of Call Frame Instructions."	,	L_219
proto_tree_add_uint64	,	F_27
"elf.eh_frame_hdr.fde_count"	,	L_251
shstrtab_offset	,	V_20
"Overlapping between: %s and %s, size: %u"	,	L_39
value	,	V_1
"Align"	,	L_127
hf_elf_symbol_table_other	,	V_62
entry_number	,	V_97
"Common Information Entry"	,	L_10
fde_count	,	V_74
"elf.p_flags.maskproc"	,	L_116
"Link Order Flag"	,	L_151
"elf.sh_addralign"	,	L_187
symbol_table_shndx_rvals	,	V_282
"Augmentation Length"	,	L_211
hf_elf64_dynamic_unspecified	,	V_46
"This member holds the section header table's file offset in bytes. If the file has no section header table, this member holds zero."	,	L_73
"elf.dwarf.upper"	,	L_280
proto_item_set_len	,	F_32
"Blackhole between: %s and %s, size: %u"	,	L_38
"elf.abi_version"	,	L_56
section_header_item	,	V_127
hf_elf_p_flags_execute	,	V_198
"Size"	,	L_177
"Code Alignment Factor"	,	L_202
"Type"	,	L_59
"Memory Image Size"	,	L_112
proto_tree	,	T_6
