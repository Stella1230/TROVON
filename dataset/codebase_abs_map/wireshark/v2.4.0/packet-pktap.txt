"Command name"	,	L_21
"Effective command name"	,	L_31
pktap_handle	,	V_59
"Header length"	,	L_3
"DLT"	,	L_7
"Header length is too short"	,	L_34
proto_register_protocol	,	F_17
hf_pktap_pfamily	,	V_33
expert_pktap	,	V_58
"Interface unit"	,	L_27
"pktap.hdrlen"	,	L_4
tvb_new_subset_remaining	,	F_14
len	,	V_3
PKT_REC_PACKET	,	V_10
col_set_str	,	F_6
gint	,	T_13
"Flags"	,	L_11
"pktap.ifunit"	,	L_28
find_capture_dissector	,	F_29
tvb	,	V_12
hf_pktap_ecmdname	,	V_43
guint32	,	T_6
"Interface type"	,	L_25
find_dissector_add_dependency	,	F_26
pktap_tree	,	V_15
COL_INFO	,	V_21
guchar	,	T_2
WTAP_ENCAP_PKTAP	,	V_61
"pktap"	,	L_36
col_clear	,	F_7
cinfo	,	V_19
PI_ERROR	,	V_56
proto_register_subtree_array	,	F_20
hf_pktap_lltrlrlen	,	V_35
array_length	,	F_19
hf_pktap_dlt	,	V_29
next_tvb	,	V_17
"Link-layer trailer length"	,	L_17
rectype	,	V_7
"PKTAP"	,	L_1
proto_tree_add_item	,	F_10
FT_STRINGZ	,	V_49
pinfo	,	V_13
col_add_fstr	,	F_9
proto_register_pktap	,	F_16
_U_	,	V_2
ENC_ASCII	,	V_31
"Process ID"	,	L_19
hf_pktap_iftype	,	V_40
hf_register_info	,	T_12
"pktap.svc_class"	,	L_24
create_capture_dissector_handle	,	F_27
hf_pktap_pid	,	V_36
COL_PROTOCOL	,	V_20
"PKTAP packet header"	,	L_35
BASE_DEC	,	V_47
"pktap.ifname"	,	L_10
proto_item	,	T_11
expert_register_field_array	,	F_22
pkt_len	,	V_18
hdrlen	,	V_6
ENC_NA	,	V_23
proto_pktap	,	V_22
ti	,	V_16
BASE_NONE	,	V_50
call_capture_dissector	,	F_4
"pktap.flags"	,	L_12
ett_pktap	,	V_24
hf_pktap_flags	,	V_32
ENC_LITTLE_ENDIAN	,	V_26
"pktap.epid"	,	L_30
dissect_pktap	,	F_5
ei_pktap_hdrlen_too_short	,	V_27
hf_pktap_ifunit	,	V_41
"pktap.lltrlrlen"	,	L_18
register_dissector	,	F_23
pktap_cap_handle	,	V_60
hf_pktap_llhdrlen	,	V_34
data	,	T_10
"pktap.cmdname"	,	L_22
"pktap.dlt"	,	L_8
tvbuff_t	,	T_7
"pktap.rectype"	,	L_6
"wtap_encap"	,	L_37
hf_pktap_cmdname	,	V_37
hf_pktap_hdrlen	,	V_25
BASE_HEX	,	V_51
hf_pktap_epid	,	V_42
ei_register_info	,	T_14
gboolean	,	T_1
expert_register_protocol	,	F_21
"pktap.llhdrlen"	,	L_16
tvb_get_letohl	,	F_8
proto_item_add_subtree	,	F_11
proto_register_field_array	,	F_18
capture_pktap	,	F_1
offset	,	T_3
ett	,	V_53
ei	,	V_54
"pktap.ecmdname"	,	L_32
expert_module_t	,	T_15
dissector_add_uint	,	F_25
"PKTAP, %u byte header"	,	L_2
eth_cap_handle	,	V_11
tree	,	V_14
pcap_pktdata_handle	,	V_44
"pktap.pfamily"	,	L_14
FT_UINT16	,	V_52
proto_reg_handoff_pktap	,	F_24
packet_info	,	T_8
wtap_pseudo_header	,	V_5
tvb_captured_length	,	F_13
"Interface name"	,	L_9
hf_pktap_ifname	,	V_30
pletoh32	,	F_2
capture_packet_info_t	,	T_4
capture_dissector_handle_t	,	T_16
"Service class"	,	L_23
pseudo_header	,	T_5
EXPFILL	,	V_57
"pktap.hdrlen_too_short"	,	L_33
WTAP_ENCAP_USER2	,	V_62
call_dissector_with_data	,	F_15
"pktap.pid"	,	L_20
"eth"	,	L_39
proto_tree_add_expert	,	F_12
cpinfo	,	V_4
"Protocol family"	,	L_13
"pcap_pktdata"	,	L_38
"pktap.iftype"	,	L_26
MIN_PKTAP_HDR_LEN	,	V_9
HFILL	,	V_48
PI_MALFORMED	,	V_55
"Record type"	,	L_5
hf_pktap_rectype	,	V_28
capture_dissector_add_uint	,	F_28
BYTES_ARE_IN_FRAME	,	F_3
"Link-layer header length"	,	L_15
dlt	,	V_8
pd	,	V_1
FT_UINT32	,	V_46
hf_pktap_svc_class	,	V_39
"Effective process ID"	,	L_29
ENC_UTF_8	,	V_38
proto_tree	,	T_9
hf	,	V_45
