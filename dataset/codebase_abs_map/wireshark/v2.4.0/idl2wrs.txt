"ERROR: typedefunion  missing matching '}'\n"	,	L_277
filter_name	,	V_27
token_item_t	,	T_9
"bitmap32bit"	,	L_57
prefix_name	,	V_127
"ptr"	,	L_7
"    ALIGN_TO_8_BYTES;\n"	,	L_149
"Usage: idl2wrs &lt;interface&gt;\n"	,	L_355
"ERROR: typedefunion unknown bracket flags encountered : 0x%08x\n"	,	L_273
"Can't remove ETH_CODE"	,	L_401
"FT_INT8"	,	L_124
"ERROR: default tag is not empty\n"	,	L_291
"   offset=dissect_ntstatus(tvb, offset, pinfo, tree, di, drep, %s, NULL);\n"	,	L_330
"packet-dcerpc-%s.c"	,	L_395
"    offset=dissect_ndr_nt_SID_with_options(tvb, offset, pinfo, tree, di, drep, param);\n"	,	L_163
enumsize	,	V_125
guint32	,	T_12
pass	,	V_95
"uvarray_%s"	,	L_223
hf_name	,	V_25
"in"	,	L_37
al	,	V_140
"Operation"	,	L_79
version	,	V_71
insidequote	,	V_84
"find_hf_field:  unknown hf_field:%s\n"	,	L_13
"NDR_POINTER_UNIQUE"	,	L_4
"uint16"	,	L_103
"static gint ett_%s_%s = -1;\n"	,	L_184
"request"	,	L_319
size	,	V_16
"VERSION:%s\n"	,	L_68
"    di-&gt;hf_index=hf_index;\n"	,	L_162
"const value_string %s[] = {\n"	,	L_348
"ERROR : typedefunion no brackets found for case\n"	,	L_289
"int8"	,	L_122
tfh	,	V_147
"ERROR: parsebrackets case not followed by '('\n"	,	L_34
"		 %s_dissect_%s_response },\n"	,	L_317
""	,	L_83
new_item	,	V_19
readcnffile	,	F_41
BASE_BUFFER_SIZE	,	V_67
bi	,	V_100
"ucarray_%s"	,	L_221
"uuid"	,	L_65
pushtoken	,	F_23
empty_struct	,	V_104
"FT_GUID"	,	L_135
"unistr"	,	L_126
parsefunction	,	F_33
"v1_enum"	,	L_335
br	,	V_42
"ABSOLUTE_TIME_LOCAL"	,	L_147
base_type	,	V_29
"FT_UINT64"	,	L_153
"WARNING: parsebrackets range was not followed by '('\n"	,	L_47
"		  &amp;uuid_dcerpc_%s, ver_%s,\n"	,	L_101
pointer_list	,	V_46
new_type	,	V_62
tmplfile	,	V_145
tmptype	,	V_92
ch	,	V_81
"    offset=dissect_ndr_uint64(tvb, offset, pinfo, tree, di, drep, hf_index, NULL);\n"	,	L_158
lastel	,	V_122
"ERROR : typedefstruct unknown type %s\n"	,	L_200
"XXX new type:%s dissector:%s Type:%s Base:%s Mask:%s Vals:%s alignment:%d\n"	,	L_59
"FT_ABSOLUTE_TIME"	,	L_146
"ERROR: first token is not '['\n"	,	L_64
"uuid_t"	,	L_133
p	,	V_123
type_list	,	V_63
"ERROR: skipdeclare  first token is not 'declare'\n"	,	L_166
struct_name	,	V_96
"ERROR: typedefstruct  third token is not '{'\n"	,	L_180
"udlong"	,	L_151
"flag"	,	L_48
base_name	,	V_111
"    case %s:\n"	,	L_299
parsetypedefunion	,	F_31
"%s_dissect_union_%s"	,	L_278
"TFS(&amp;%s_tfs)"	,	L_258
"ERROR: typedefstruct  missing matching '}'\n"	,	L_181
"hf_%s_%s_%s_%s"	,	L_293
refcount	,	V_21
"    offset=dissect_ndr_time_t(tvb, offset, pinfo, tree, di, drep, hf_index, NULL);\n"	,	L_160
" 	   ALIGN_TO_2_BYTES;\n"	,	L_300
"ERROR: could not open idl-file:%s\n"	,	L_387
"ERROR: typedefunion  first token is not 'typedef'\n"	,	L_272
"ERROR: typedefbitmap unknown bracket flags encountered : 0x%08x\n"	,	L_237
bracket	,	V_41
idlfile	,	V_144
"	 offset=%s(tvb, offset, pinfo, tree, di, drep, %s, param);\n"	,	L_211
"\n\nParsing header:\n================\n"	,	L_392
"("	,	L_23
"    guint32 param=%s;\n"	,	L_295
hri	,	V_22
"\nEND STRUCT:%s pass:%d\n-------\n"	,	L_233
va_list	,	T_2
"PARAM_VALUE"	,	L_364
tfs_name	,	V_112
"	 while(count--){\n"	,	L_218
el	,	V_121
count	,	V_66
"TYPE : X%s,%sX\n"	,	L_363
"NTTIME"	,	L_144
"    offset=dissect_ndr_ucvarray(tvb, offset, pinfo, tree, di, drep, %s);\n"	,	L_325
"    if(parent_tree){\n"	,	L_196
"ERROR: parsebrackets '[' inside bracket item\n"	,	L_30
"    offset = dissect_ndr_nt_NTTIME(tvb, offset, pinfo, tree, di, drep, hf_index);\n"	,	L_145
"    default:\n"	,	L_298
eval	,	V_124
mergefile	,	F_38
"static gint ett_%s = -1;\n"	,	L_90
"    offset=dissect_ndr_uint8(tvb, offset, pinfo, NULL, di, drep, -1, &amp;flags);\n"	,	L_249
")"	,	L_24
alignment	,	V_54
"interface"	,	L_73
"		 offset=%s(tvb, offset, pinfo, tree, di, drep);\n"	,	L_219
"ERROR: typedefbitmap can only handle single bit fields\n"	,	L_257
"    offset=%s(tvb, offset, pinfo, tree, di, drep);\n"	,	L_228
fh	,	V_1
"ERROR: parsebrackets first token is not '['\n"	,	L_26
"    offset = dissect_nt_policy_hnd(tvb, offset, pinfo, tree, di, drep,\n"	,	L_140
" 	   ALIGN_TO_8_BYTES;\n"	,	L_302
"\n----------\nEND CONST:%s\n"	,	L_174
title	,	V_26
bitmap_name	,	V_108
argv	,	V_143
"    proto_item_set_len(item, offset-old_offset);\n"	,	L_231
"gensize"	,	L_40
eth_handoff	,	V_77
"ERROR: typedefstruct (%s) fixed array size looks different to calculated one %s!=%s\n"	,	L_204
"    offset=dissect_ndr_uint32(tvb, offset, pinfo, tree,\n"	,	L_286
"*"	,	L_201
new_token_item	,	V_79
argc	,	V_142
no_emit_list	,	V_36
find_dissector_param_value	,	F_5
"NTTIME_1sec"	,	L_150
"ERROR : typedefunion no case found in brackets\n"	,	L_290
"%s.cnf"	,	L_385
eth_hfarr	,	V_34
"declare"	,	L_165
"ERROR: typedefbitmap  third token is not '{'\n"	,	L_240
"    { 0	, NULL }\n"	,	L_350
"ETH_ETT"	,	L_382
"ERROR: size of tag for union:%s is not known\n"	,	L_10
field_name	,	V_101
"%s_%s"	,	L_214
"ERROR: union does not end with '}'\n"	,	L_310
"    flags&amp;=(~%s);\n"	,	L_266
"prt_to_define, 	weirdo pointer :%s\n"	,	L_9
function_name	,	V_117
skipdeclare	,	F_25
" 	   tree=proto_tree_add_subtree(parent_tree, tvb, offset, -1, ett_%s_%s, &amp;item, \"%s\");\n"	,	L_283
"    offset=dissect_ndr_duint32(tvb, offset, pinfo, tree, di, drep, hf_index, NULL);\n"	,	L_152
"ERROR: typedeffunction can not handle this combination of sizeis/lengthis\n"	,	L_327
"ERROR : function  parameter is neither in nor out\n"	,	L_323
hf	,	V_107
"%s_dissect_%s"	,	L_104
"NDR_POINTER_REF"	,	L_6
utsi	,	V_14
"		 NULL, HFILL }},\n"	,	L_20
valsstring	,	V_30
fixed_array_size	,	V_102
is_array_of_pointers	,	V_103
"    offset=dissect_ndr_toplevel_pointer(tvb, offset, pinfo, tree, di, drep, %s, %s, \"%s\", -1);\n"	,	L_328
","	,	L_32
register_hf_rename	,	F_10
"    \"%s is NOT set\"\n"	,	L_262
hf_index	,	V_99
"%s(tvbuff_t *tvb, int offset, packet_info *pinfo, proto_tree *parent_tree, dcerpc_info *di, guint8 *drep, int hf_index, guint32 param _U_)\n"	,	L_244
num_pointers	,	V_10
"WARNING: parsebrackets switch_type did not end with ')'\n"	,	L_53
"ERROR : function no brackets found for case\n"	,	L_321
"TOKENLIST:\n"	,	L_60
"ascstr_noterm"	,	L_390
"ERROR: no uuid found\n"	,	L_93
token_list	,	V_38
tag_alignment	,	V_115
new_prefix	,	V_128
"NTTIME_hyper"	,	L_148
"NOEMIT Skipping this struct dissector.\n"	,	L_183
"WARNING: parsebrackets flag was not followed by '('\n"	,	L_49
"ERROR: field does not en with ';'\n"	,	L_230
pointer_item_t	,	T_4
"ERROR: parsebrackets case does not end with ')'\n"	,	L_35
cnfline	,	V_138
pfx	,	V_130
g_removeD	,	F_32
vals	,	V_65
"static proto_item *hnd_item;\n"	,	L_138
" 				  hf_index, &amp;policy_hnd, &amp;hnd_item,\n"	,	L_141
fss	,	V_106
printtokenlist	,	F_20
infile	,	V_134
blurb	,	V_32
"	 offset=dissect_ndr_ucvarray(tvb, offset, pinfo, tree, di, drep, %s);\n"	,	L_226
"ERROR: const  first token is not 'const'\n"	,	L_168
"\nAutogenerating built-in type:%s\n------------\n"	,	L_105
parseconst	,	F_26
"Token \"%s\"\n"	,	L_61
g_fopen	,	F_39
hf_bitname	,	V_109
"    guint32 flags;\n"	,	L_246
" 	   break;\n"	,	L_305
FILE	,	T_1
"ERROR: typedefunion 4 can not handle alignment:%d\n"	,	L_308
"static e_ctx_hnd policy_hnd;\n"	,	L_137
"\nFUNCTION:%s pass:%d\n-------\n"	,	L_314
"ERROR: function does not end with ';'\n"	,	L_333
" 	   proto_item_append_text(item, \"UNKNOWN-FLAGS\");\n"	,	L_268
"ERROR: typedefunion 3 can not handle alignment:%d\n"	,	L_303
"FT_INT64"	,	L_155
"    offset=dissect_ndr_uint32(tvb, offset, pinfo, NULL, di, drep, -1, &amp;flags);\n"	,	L_250
"#define %s		%d\n"	,	L_346
dpv	,	V_6
"static e_guid_t uuid_dcerpc_%s = {\n"	,	L_94
BI_CASE	,	V_47
"ERROR: typedefenum  'v1_enum' is not followed by ']'\n"	,	L_337
"    \n"	,	L_157
"ERROR: function does not end with ')'\n"	,	L_332
"ERROR: parsebrackets '{' '}' inside bracket item\n"	,	L_29
"bitmap8bit"	,	L_56
"FT_STRING"	,	L_128
"ERROR: typedefunion 2 can not handle alignment:%d\n"	,	L_287
"		 %s_dissect_%s_request,\n"	,	L_316
quoted_string	,	V_137
"\n\n/* INCLUDED FILE : %s */\n"	,	L_356
BI_SIZE_IS	,	V_55
str_read_string	,	F_40
minor	,	V_69
"		  function_dissectors, hf_%s_opnum);\n"	,	L_102
rename_tokens	,	F_15
size_t	,	T_15
ptr_to_define	,	F_8
parseheader	,	F_21
"{\n"	,	L_108
hf_status	,	V_73
"%s.rc"	,	L_85
"r"	,	L_357
nei	,	V_139
"0"	,	L_2
nel	,	V_35
"ERROR: unknown pointer type\n"	,	L_70
"public"	,	L_39
"ERROR: typedefbitmap can only handle hexadecimal constants\n"	,	L_256
" 	   tree=proto_item_add_subtree(item, ett_%s_%s);\n"	,	L_198
"FT_NONE"	,	L_232
"    offset=dissect_ndr_uint16(tvb, offset, pinfo, tree, di, drep, hf_index, NULL);\n"	,	L_109
tmpstr	,	V_97
"\nBITMAP:%s pass:%d\n-------\n"	,	L_243
type_item_t	,	T_11
"ERROR: no tokens\n"	,	L_63
newpi	,	V_59
BI_CASE_DEFAULT	,	V_48
level	,	V_51
"%s(tvbuff_t *tvb, int offset, packet_info *pinfo, proto_tree *tree, dcerpc_info *di, guint8 *drep, int hf_index, guint32 param)\n"	,	L_139
get_union_tag_size	,	F_9
"ERROR: typedefunion  second token is not 'union'\n"	,	L_275
register_new_type	,	F_19
"union"	,	L_274
"ERROR: typedefstruct  second token is not 'struct'\n"	,	L_179
"    old_offset=offset;\n"	,	L_195
"ERROR: the hf_rename field:%s was never referenced. it is likely the conformance file is stale\n"	,	L_12
find_hf_field	,	F_12
"ERROR: const  fourth token is not '='\n"	,	L_170
"	 offset=dissect_ndr_embedded_pointer(tvb, offset, pinfo, tree, di, drep, %s, %s, \"%s\", -1);\n"	,	L_215
enum_list_t	,	T_13
"ETH_HDR"	,	L_378
"UNION_TAG_SIZE: %s == %d\n"	,	L_372
"static const true_false_string %s_tfs = {\n"	,	L_260
"GUID"	,	L_132
"%s_"	,	L_393
code	,	V_132
case_name	,	V_45
strptr	,	V_135
g_print	,	F_43
"ERROR: ran out of tokens inside header\n"	,	L_72
"\n----------\nEND ENUM:%s\n"	,	L_353
"    }\n"	,	L_199
"   return offset;\n"	,	L_307
"\nEND BITMAP:%s pass:%d\n-------\n"	,	L_269
"ETH_HF"	,	L_380
"FT_UINT32"	,	L_87
ifname	,	V_72
"typedef"	,	L_175
"ERROR: union does not end with ';'\n"	,	L_311
item_alignment	,	V_116
"ERROR: typedefstruct can not handle this combination of sizeis/lengthis\n"	,	L_227
"hf_%s_rc"	,	L_84
"    guint8 flags;\n"	,	L_245
"pointer_default"	,	L_69
"%s_%s_vals"	,	L_344
"HF_RENAME: %s -&gt; %s\n"	,	L_369
"bool8"	,	L_125
" 	   proto_item_append_text(item, \" %s\");\n"	,	L_265
union_tag_size	,	V_53
newstr	,	V_113
"ERROR: typedefstruct unknown bracket flags encountered : 0x%08x\n"	,	L_177
"    offset=dissect_ndr_cvstring(tvb, offset, pinfo, tree, di, drep, 2, hf_index, FALSE, NULL);\n"	,	L_127
"ERROR enum unknown size\n"	,	L_351
"int32"	,	L_116
"    offset=dissect_ndr_ucarray(tvb, offset, pinfo, tree, di, drep, %s);\n"	,	L_326
pi	,	V_11
union_tag_size_item_t	,	T_5
eth_hdr	,	V_94
fullinecomment	,	V_82
"BASE_HEX"	,	L_88
"%s(tvbuff_t *tvb, int offset, packet_info *pinfo _U_, proto_tree *parent_tree, dcerpc_info *di _U_, guint8 *drep _U_, int hf_index, guint32 param _U_)\n"	,	L_188
"ERROR: could not parse cnf directive:%s\n"	,	L_375
typedef_struct_finished	,	V_105
"NDR_POINTER_PTR"	,	L_8
type_item	,	V_43
g_remove	,	F_44
prune_keyword_parameters	,	F_16
"value"	,	L_44
dissector	,	V_64
"%s.idl"	,	L_386
"static int %s = -1;\n"	,	L_15
"const"	,	L_167
"    offset=dissect_ndr_uuid_t(tvb, offset, pinfo, tree, di, drep, hf_index, NULL);\n"	,	L_134
"packet-dcerpc-%s-template.h"	,	L_399
len	,	V_131
"ERROR: typedefenum should not be reached\n"	,	L_342
"unistr_noterm"	,	L_389
dissector_param_list	,	V_8
"ERROR: invalid integer: %s\n"	,	L_202
"BASE_DEC"	,	L_81
"ERROR: we did not process all tokens. Compiler is incomplete.\n===========================================\n"	,	L_394
qs	,	V_85
prefixes_to_trim	,	V_129
"    guint16 level;\n"	,	L_280
"ERROR: struct does not end with ';'\n"	,	L_235
"w"	,	L_377
str	,	V_39
"HF_RENAME"	,	L_368
union_tag	,	V_141
"ERROR: ran out of tokens\n"	,	L_75
"    offset=dissect_ndr_uint16(tvb, offset, pinfo, tree,\n"	,	L_284
"NOEMIT : %s\n"	,	L_361
"ERROR: typedefenum  not 'v1_enum' inside brackets\n"	,	L_336
"int %s(tvbuff_t *tvb, int offset, packet_info *pinfo, proto_tree *tree, dcerpc_info *di, guint8 *drep, int hf_index, guint32 param);\n"	,	L_186
"NTSTATUS"	,	L_388
"	  dcerpc_init_uuid(proto_%s, ett_%s,\n"	,	L_100
"register_hf_field:  hf_fields %s and %s have different types %s %s\n"	,	L_14
"	  { 0x%c%c, 0x%c%c, 0x%c%c, 0x%c%c, 0x%c%c, 0x%c%c, 0x%c%c, 0x%c%c}\n"	,	L_96
"    { %d	, \"%s\" },\n"	,	L_349
"ERROR: typedefunion 1 can not handle alignment:%d\n"	,	L_282
"}\n"	,	L_111
"ERROR: typedefbitmap  first token is not 'typedef'\n"	,	L_236
"uint8"	,	L_119
"NOEMIT Skipping this struct item :%s\n"	,	L_213
"SID"	,	L_161
g_new0	,	F_3
"    if(flags&amp;%s){\n"	,	L_264
" 	   offset=%s(tvb, offset, pinfo, tree, di, drep);\n"	,	L_304
"	 ...\n"	,	L_62
"	 }\n"	,	L_220
"POINTER_DEFAULT:%s\n"	,	L_71
DISSECTORNAME_MAXLEN	,	V_93
"\nCONST:%s\n-------\n"	,	L_172
"extern const value_string %s[];\n"	,	L_347
"long"	,	L_117
g_strcmp0	,	F_6
"ERROR: typedefenum value is not a number\n"	,	L_341
"    offset=dissect_ndr_uint8(tvb, offset, pinfo, tree, di, drep, hf_index, NULL);\n"	,	L_120
"ucvarray_%s"	,	L_225
"%s_dissect_%s_%s(tvbuff_t *tvb _U_, int offset _U_, packet_info *pinfo _U_, proto_tree *tree _U_, dcerpc_info* di _U_, guint8 *drep _U_)\n"	,	L_318
old_name	,	V_17
ti	,	V_37
BI_BITMAP32	,	V_58
"ERROR : typedefunion unknown type %s\n"	,	L_292
"	 int count=%d;\n"	,	L_217
"size_is"	,	L_54
"STRIP_PREFIX"	,	L_373
"FT_UINT8"	,	L_121
"static int\n"	,	L_106
tokenize	,	F_24
"FT_BYTES"	,	L_143
skip_blanks	,	V_136
"ERROR: typedefbitmap can not handle alignment:%d\n"	,	L_247
"length_is"	,	L_55
"\nEND FUNCTION:%s pass:%d\n-------\n"	,	L_331
normalcomment	,	V_83
qspos	,	V_86
"	 offset=dissect_ndr_ucarray(tvb, offset, pinfo, tree, di, drep, %s);\n"	,	L_222
"HF_FIELD"	,	L_366
"hf_%s_%s_%s"	,	L_206
"{"	,	L_27
"version"	,	L_67
"ascstr"	,	L_130
"    guint32 level = 0;\n"	,	L_281
stderr	,	V_3
"Return code"	,	L_86
"    offset=dissect_ndr_embedded_pointer(tvb, offset, pinfo, tree, di, drep, %s, NDR_POINTER_UNIQUE, \"%s\", -1);\n"	,	L_297
hf_rename_list	,	V_20
union_name	,	V_114
"  use the UNION_TAG_SIZE directive to specify it in teh conformance file\n"	,	L_11
"%s_dissect_%s_%s"	,	L_207
"\nENUM:%s\n-------\n"	,	L_345
name	,	V_4
"WARNING: parsebrackets value was not followed by '('\n"	,	L_45
"dlong"	,	L_154
pointer_type	,	V_13
next	,	V_7
"ERROR: typedefunion  third token is not '{'\n"	,	L_276
"Interface:%s\n"	,	L_76
"ERROR: const  sixth token is not ';'\n"	,	L_171
"["	,	L_25
ptmpstr	,	V_98
"ERROR: const, not a variable name:%s\n"	,	L_169
register_dissector_param_value	,	F_2
pointer_default	,	V_12
"ERROR: bitmap does not end with '}'\n"	,	L_270
"};\n"	,	L_97
ws_strtoi32	,	F_42
register_hf_field	,	F_13
g_strdup	,	F_4
"ERROR: can not handle alignment:%d\n"	,	L_194
"FT_UINT16"	,	L_80
case2str	,	F_30
"ERROR: typedefenum  second token is not 'enum'\n"	,	L_339
"unique"	,	L_3
mask	,	V_31
"}"	,	L_28
"%s(tvbuff_t *tvb, int offset, packet_info *pinfo, proto_tree *tree, dcerpc_info *di, guint8 *drep, int hf_index, guint32 param _U_)\n"	,	L_107
";"	,	L_229
preparetrimprefix	,	F_35
"ETH_HANDOFF"	,	L_384
"ERROR: interface not found\n"	,	L_74
"NULL"	,	L_82
"FT_INT32"	,	L_118
" 				  param&amp;0x01, param&amp;0x02);\n"	,	L_142
lineno	,	V_91
"response"	,	L_320
"ERROR: typedefenum  third token is not '{'\n"	,	L_340
"int16"	,	L_112
"ERROR: typedefbitmap missing matching '}'\n"	,	L_242
"ERROR: function  first token is not 'WERROR'\n"	,	L_312
"    proto_item *item=NULL;\n"	,	L_189
"UNION_TAG_SIZE: invalid string: %s\n"	,	L_371
"		 &amp;ett_%s_%s,\n"	,	L_185
"ERROR : parsebrackets switch_type unknown type %s\n"	,	L_52
"char"	,	L_123
"    proto_tree *tree=NULL;\n"	,	L_190
"ref"	,	L_5
"]"	,	L_31
"	 guint32 param=%s;\n"	,	L_210
usage	,	F_37
"    if(flags){\n"	,	L_267
ft_type	,	V_28
BI_SWITCH_TYPE	,	V_52
"ERROR enum terminator is not ';'\n"	,	L_343
"ERROR: typedefbitmap  second token is not 'bitmap'\n"	,	L_239
"ERROR: function  third token is not '('\n"	,	L_313
"%s(tvbuff_t *tvb, int offset, packet_info *pinfo, proto_tree *tree, dcerpc_info *di, guint8 *drep)\n"	,	L_209
"ETH_HFARR"	,	L_379
val	,	V_110
parsebrackets	,	F_17
prefix_str	,	V_146
"int\n"	,	L_187
"="	,	L_252
"%s.opnum"	,	L_78
insidetoken	,	V_87
hfi	,	V_23
"    return offset;\n"	,	L_110
"\nSTRUCT:%s pass:%d\n-------\n"	,	L_182
trimmed_prefixes_t	,	T_14
"    \"%s is SET\",\n"	,	L_261
"ERROR: function unknown bracket flags encountered : 0x%08x\n"	,	L_322
"/* END OF INCLUDED FILE : %s */\n\n\n"	,	L_358
"hyper"	,	L_391
"uint32"	,	L_114
"VALS(NT_errors)"	,	L_89
funcno	,	V_118
last_token_item	,	V_80
"fixedarray_%s"	,	L_216
gint32	,	T_16
"		  { \"%s\", \"%s\", %s, %s,\n"	,	L_17
BI_BITMAP8	,	V_57
hf_rename_item_t	,	T_6
"HF_FIELD: %s \"%s\"\n"	,	L_367
flags	,	V_44
"struct"	,	L_178
"ERROR: typedefenum  first token is not 'typedef'\n"	,	L_334
"	 { %d, \"%s\",\n"	,	L_315
eth_ett	,	V_74
bracket_item_t	,	T_10
"UUID:%s\n"	,	L_66
tmpti	,	V_40
"ERROR: parsebrackets should not be reached  unknown tag:%s\n"	,	L_58
"default"	,	L_36
"WERROR"	,	L_164
"packet-dcerpc-%s.h"	,	L_398
"ERROR: typedefstruct  fixed array does not end with ']' it ended with %s\n"	,	L_205
no_emit_item_t	,	T_8
"WARNING: parsebrackets switch_type was not followed by '('\n"	,	L_51
"0x"	,	L_254
"    proto_tree_add_boolean(tree, %s, tvb, offset-%d, %d, flags);\n"	,	L_263
"ETH_CODE"	,	L_376
linepos	,	V_89
check_hf_rename_refcount	,	F_11
token	,	V_78
ptrs	,	V_9
"    ALIGN_TO_2_BYTES;\n"	,	L_192
"packet-dcerpc-%s-template.c"	,	L_396
"subcontext"	,	L_43
"Can't allocate memory. Exit.\n"	,	L_1
"hf_%s_opnum"	,	L_77
"	 offset=dissect_ndr_uvarray(tvb, offset, pinfo, tree, di, drep, %s);\n"	,	L_224
"STRIP_PREFIX: %s\n"	,	L_374
"%d.%d"	,	L_98
enum_list	,	V_120
check_if_to_emit	,	F_14
"\nEND UNION:%s pass:%d\n-------\n"	,	L_309
hf_field_item_t	,	T_7
BI_LENGTH_IS	,	V_56
"static guint16 ver_%s = %d;\n"	,	L_99
"UNION_TAG_SIZE"	,	L_370
"\n"	,	L_21
"range"	,	L_46
"ETH_FT"	,	L_383
" 							 di, drep, hf_index, &amp;level);\n"	,	L_285
"0x%x"	,	L_255
"switch_type"	,	L_50
"ERROR: struct does not end with '}'\n"	,	L_234
eth_hf	,	V_33
"TYPE"	,	L_362
"		  %s, %s,\n"	,	L_18
"    ALIGN_TO_4_BYTES;\n"	,	L_193
trimprefix	,	F_36
uuid	,	V_70
tokenpos	,	V_88
"ERROR: could not find %s\n"	,	L_397
major	,	V_68
"ERROR : function unknown type %s\n"	,	L_324
"	  0x%c%c%c%c%c%c%c%c, 0x%c%c%c%c, 0x%c%c%c%c,\n"	,	L_95
"    switch(level){\n"	,	L_288
"enum"	,	L_338
"ETH_ETTARR"	,	L_381
hf_field_list	,	V_24
"ERROR: typedefstruct  first token is not 'typedef'\n"	,	L_176
"		 &amp;ett_%s,\n"	,	L_91
find_type	,	F_18
"ERROR: typedefbitmap can not handle '[' yet\n"	,	L_251
"out"	,	L_38
dissector_param_value_t	,	T_3
IDL2WRS_DEBUG	,	F_1
parsetypedefenum	,	F_34
format	,	V_2
"%s.%s.%s"	,	L_208
prepend_pointer_list	,	F_7
"case"	,	L_33
"ERROR: body does not start with '{'\n"	,	L_92
"ERROR: typedefbitmap '{' encountered inside bitmap\n"	,	L_241
"VALS(%s)"	,	L_352
"uint64"	,	L_156
" 	   item=proto_tree_add_item(parent_tree, hf_index, tvb, offset, %d, ENC_LITTLE_ENDIAN);\n"	,	L_248
" 	   ALIGN_TO_4_BYTES;\n"	,	L_301
"bitmap"	,	L_238
parsetypedefbitmap	,	F_29
"PARAM_VALUE : %s=%s\n"	,	L_365
"The tokens remaining when aborting:\n"	,	L_354
"    offset=dissect_ndr_cvstring(tvb, offset, pinfo, tree, di, drep, 1, hf_index, FALSE, NULL);\n"	,	L_131
outfile	,	V_133
BI_POINTER	,	V_60
"    offset=%s(tvb, offset, pinfo, tree, di, drep, %s, param);\n"	,	L_296
"    int old_offset;\n"	,	L_191
"#define %s		%s\n"	,	L_173
"Reading conformance file\n=======================\n"	,	L_359
g_snprintf	,	F_22
"FT_INT16"	,	L_113
"%d"	,	L_203
hfvalsstring	,	V_126
"    offset=dissect_ndr_uint32(tvb, offset, pinfo, tree, di, drep, hf_index, NULL);\n"	,	L_115
"BASE_NONE"	,	L_129
" 	   item=proto_tree_add_item(parent_tree, hf_index, tvb, offset, -1, ENC_NA);\n"	,	L_197
"%s_dissect_union_%s_%s_%s"	,	L_294
eth_ft	,	V_119
BI_IN	,	V_49
eth_code	,	V_76
"%s was successfully compiled\n"	,	L_400
eth_ettarr	,	V_75
"policy_handle"	,	L_136
"\nUNION:%s pass:%d\n-------\n"	,	L_279
value	,	V_5
union_tag_size_list	,	V_15
"		{ &amp;%s,\n"	,	L_16
"FT_BOOLEAN"	,	L_259
new_name	,	V_18
ws_strtou32	,	F_28
"NOEMIT"	,	L_360
"SKIPPED emitting of %s\n"	,	L_22
nextch	,	V_90
"ERROR: bitmap does not end with ';'\n"	,	L_271
BI_OUT	,	V_50
"time_t"	,	L_159
"WARNING: parsebrackets can not handle switch_is properly yet  so we can not verify the tag size\n"	,	L_42
"		 \"%s\", HFILL }},\n"	,	L_19
dissectorname	,	V_61
"	 return offset;\n"	,	L_212
" 	   offset=dissect_deferred_pointers(pinfo, tvb, offset, di, drep);\n"	,	L_329
"ERROR: typedefbitmap i expected a '=' here\n"	,	L_253
parsetypedefstruct	,	F_27
"ERROR: field does not end with ';'\n"	,	L_306
"switch_is"	,	L_41
