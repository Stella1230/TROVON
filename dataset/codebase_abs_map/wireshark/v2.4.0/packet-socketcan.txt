"can.reserved"	,	L_19
proto_reg_handoff_socketcan	,	F_37
"Remote Transmission Request Flag"	,	L_12
"can.padding"	,	L_21
proto_register_protocol	,	F_27
dissector_try_uint_new	,	F_18
register_decode_as	,	F_36
prefs_register_protocol	,	F_33
"Controller Area Network FD"	,	L_32
"Error State Indicator"	,	L_24
can_da_build_value	,	V_68
gint	,	T_10
col_set_str	,	F_7
CAN_EFF_MASK	,	V_24
CAN_SFF_MASK	,	V_26
id	,	V_23
tvb_captured_length_remaining	,	F_20
tvb	,	V_4
guint32	,	T_11
COL_INFO	,	V_30
hf_canfd_brsflag	,	V_50
FT_BOOLEAN	,	V_59
CANFD_BRS	,	V_64
frame_type	,	V_9
"Whether the CAN ID/flags field should be byte-swapped"	,	L_38
col_clear	,	F_8
cinfo	,	V_28
"can.flags.rtr"	,	L_13
can_da	,	V_70
socketcan_fd_handle	,	V_76
proto_register_subtree_array	,	F_31
val_to_str	,	F_10
array_length	,	F_30
can_value	,	F_3
"Reserved"	,	L_18
next_tvb	,	V_14
decode_as_t	,	T_17
proto_tree_add_item	,	F_14
pinfo	,	T_2
col_add_fstr	,	F_9
_U_	,	V_1
socketcan_bigendian_handle	,	V_74
gpointer	,	T_4
col_append_str	,	F_11
dissect_socketcan_bigendian	,	F_22
WTAP_ENCAP_SOCKETCAN	,	V_77
result	,	V_2
LINUX_SLL_P_CAN	,	V_78
tvb_get_guint32	,	F_5
hf_register_info	,	T_13
prefs_register_bool_preference	,	F_35
can_identifier	,	V_11
"Unknown (0x%02x)"	,	L_4
ett_can	,	V_38
COL_PROTOCOL	,	V_29
FT_UINT8	,	V_60
CAN_LEN_OFFSET	,	V_20
CANFD_FLAG_OFFSET	,	V_54
BASE_DEC	,	V_61
hf_can_errflag	,	V_19
"CAN"	,	L_2
can_module	,	V_67
proto_item	,	T_8
CAN_DATA_OFFSET	,	V_35
decode_as_default_populate_list	,	V_71
proto_canfd	,	V_52
ENC_NA	,	V_37
guint8	,	T_9
MAX_DECODE_AS_PROMPT_LEN	,	V_3
ti	,	V_8
canfd_flag_fields	,	V_49
BASE_NONE	,	V_63
hf_can_extflag	,	V_17
"can"	,	L_26
"sll.ltype"	,	L_40
dissect_socketcan_hostendian	,	F_23
"Padding"	,	L_20
dissect_socketcan_fd	,	F_25
"can.id"	,	L_9
build_valid_func	,	T_15
ENC_LITTLE_ENDIAN	,	V_44
register_dissector_table	,	F_32
register_dissector	,	F_28
proto_tree_add_bitmask_list	,	F_16
data	,	T_12
LINUX_SLL_P_CANFD	,	V_79
"%s: 0x%08x   "	,	L_3
hf_can_padding	,	V_42
"can.subdissector"	,	L_28
socketcan_hostendian_handle	,	V_75
tvbuff_t	,	T_5
ett_can_fd	,	V_53
can_flags_fd	,	V_48
proto_register_socketcan	,	F_26
"wtap_encap"	,	L_39
can_id	,	V_12
BASE_HEX	,	V_57
LINUX_CAN_ERR	,	V_32
CANFD_ESI	,	V_65
decode_as_default_reset	,	V_72
hf_can_len	,	V_39
can_da_values	,	V_69
decode_as_default_change	,	V_73
proto_item_add_subtree	,	F_15
"Identifier"	,	L_8
module_t	,	T_14
ENC_HOST_ENDIAN	,	V_47
CAN_EFF_FLAG	,	V_21
proto_register_field_array	,	F_29
FT_BYTES	,	V_62
"protocol"	,	L_35
guint	,	T_7
ett	,	V_66
"Byte-swap the CAN ID/flags field"	,	L_37
wmem_packet_scope	,	F_13
dissector_add_uint	,	F_38
tree	,	V_5
can_prompt	,	F_1
encoding	,	V_6
"Frame-Length"	,	L_16
packet_info	,	T_1
tvb_get_guint8	,	F_6
tvb_bytes_to_str_punct	,	F_12
"canfd.flags.esi"	,	L_25
tvb_captured_length	,	F_21
"Next level protocol as"	,	L_1
"CANFD"	,	L_6
hf_can_ident_std	,	V_27
hf_can_ident_ext	,	V_16
proto_can	,	V_36
"can-bigendian"	,	L_30
frame_len	,	V_10
ENC_ANTI_HOST_ENDIAN	,	V_46
"byte_swap"	,	L_36
hf_can_rtrflag	,	V_18
"canfd.flags.brs"	,	L_23
"Bit Rate Setting"	,	L_22
"Network"	,	L_27
"can.flags.xtd"	,	L_11
g_snprintf	,	F_2
LINUX_CAN_STD	,	V_25
tvb_new_subset_length	,	F_17
subdissector_table	,	V_41
hf_can_reserved	,	V_40
dissect_socketcan_common	,	F_4
byte_swap	,	V_43
call_data_dissector	,	F_19
"%s: 0x%08x   %s"	,	L_7
raw_can_id	,	V_13
can_tree	,	V_7
CAN_ERR_FLAG	,	V_31
HFILL	,	V_58
LINUX_CAN_EXT	,	V_22
prefs_register_obsolete_preference	,	F_34
CAN_RTR_FLAG	,	V_34
hf_canfd_esiflag	,	V_51
"can.flags.err"	,	L_15
gchar	,	T_3
"CAN next level dissector"	,	L_34
"can-hostendian"	,	L_31
frame_type_vals	,	V_33
ENC_BIG_ENDIAN	,	V_45
"Error Message Flag"	,	L_14
FT_UINT32	,	V_56
decode_as_value_t	,	T_16
"(Remote Transmission Request)"	,	L_5
"Extended Flag"	,	L_10
"canfd"	,	L_33
"Controller Area Network"	,	L_29
can_flags	,	V_15
dissect_socketcanfd_common	,	F_24
"can.len"	,	L_17
proto_tree	,	T_6
hf	,	V_55
