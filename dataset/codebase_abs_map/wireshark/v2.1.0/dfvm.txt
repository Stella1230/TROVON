value_str	,	V_17
read_tree	,	F_15
dfvm_apply	,	F_28
g_assert	,	F_27
drange_node	,	T_8
"%05d IF-TRUE-GOTO\t%u\n"	,	L_28
g_new	,	F_2
proto_get_finfo_ptr_array	,	F_16
") --&gt; reg#%u\n"	,	L_9
len	,	V_21
ANY_MATCHES	,	V_38
","	,	L_15
id	,	V_15
range_item	,	V_19
ANY_GT	,	V_32
"%05d ANY_NE\t\treg#%u == reg#%u\n"	,	L_18
reg1	,	V_68
dfvm_insn_new	,	F_1
dfvm_opcode_t	,	T_2
reg2	,	V_69
"%05d CALL_FUNCTION\t%s ("	,	L_6
any_test	,	F_21
CHECK_EXISTS	,	V_26
"] -&gt; reg#%u\n"	,	L_16
drange	,	V_12
IF_TRUE_GOTO	,	V_40
DRANGE_NODE_END_T_LENGTH	,	V_51
fvalue_contains	,	V_92
found_something	,	V_62
dfvm_dump	,	F_9
cmp	,	V_67
list_b	,	V_71
list_a	,	V_70
dfvm_init_const	,	F_30
fvalue_lt	,	V_89
drange_t	,	T_18
consts	,	V_20
DRANGE_NODE_END_T_OFFSET	,	V_53
g_list_next	,	F_22
ANY_GE	,	V_33
PUT_FVALUE	,	V_22
fvalue_slice	,	F_26
g_list_append	,	F_20
fvalue_le	,	V_90
FILE	,	T_5
accum	,	V_80
IF_FALSE_GOTO	,	V_41
funcdef	,	V_45
attempted_load	,	V_63
"%05d PUT_FVALUE\t%s &lt;%s&gt; -&gt; reg#%u\n"	,	L_2
same_name_next	,	V_65
put_fvalue	,	F_19
g_assert_not_reached	,	F_14
old_fv	,	V_78
"?"	,	L_11
f	,	V_13
fvalue_to_string_repr	,	F_11
g_free	,	F_6
i	,	V_60
ANY_NE	,	V_31
dfilter_t	,	T_6
ANY_BITWISE_AND	,	V_36
insn	,	V_2
fvalue	,	V_10
fvalue_matches	,	V_93
BASE_NONE	,	V_24
v	,	V_7
dfvm_value_new	,	F_8
GSList	,	T_7
start_offset	,	V_52
dfvm_value_t	,	T_3
dfvm_value_free	,	F_3
num_registers	,	V_72
df	,	V_14
data	,	V_48
"%05d ANY_LE\t\treg#%u == reg#%u\n"	,	L_22
"\nInstructions:\n"	,	L_3
fvalue_t	,	T_15
FVALUE	,	V_8
end_offset	,	V_54
GList	,	T_14
"%05d MK_RANGE\t\treg#%u["	,	L_10
drange_free	,	F_5
"%05d ANY_LT\t\treg#%u == reg#%u\n"	,	L_21
dfvm_value_type_t	,	T_4
"Constants:\n"	,	L_1
g_ptr_array_index	,	F_10
field_info	,	T_13
GPtrArray	,	T_12
gboolean	,	T_9
reg	,	V_57
fvalue_eq	,	V_85
function	,	V_84
"%d:"	,	L_14
header_field_info	,	T_11
registers	,	V_64
FVALUE_FREE	,	F_4
"%d-%d"	,	L_13
"%05d ANY_BITWISE_AND\t\treg#%u == reg#%u\n"	,	L_23
fvalue_ne	,	V_86
dfvm_insn_t	,	T_1
ANY_EQ	,	V_30
FTREPR_DFILTER	,	V_23
guint	,	T_17
", reg#%u"	,	L_8
tree	,	V_56
fvalues	,	V_61
from_reg	,	V_73
DRANGE_NODE_END_T_UNINITIALIZED	,	V_50
fvalue_bitwise_and	,	V_91
range_list	,	V_18
ANY_LE	,	V_35
"%05d ANY_MATCHES\treg#%u matches reg#%u\n"	,	L_25
arg3	,	V_5
proto_check_for_protocol_or_field	,	F_29
arg2	,	V_4
ending	,	V_49
NOT	,	V_39
arg4	,	V_6
new_fv	,	V_79
arg1	,	V_3
"%05d RETURN\n"	,	L_27
ANY_CONTAINS	,	V_37
name	,	V_46
ANY_LT	,	V_34
abbrev	,	V_44
FvalueCmpFunc	,	T_16
dfvm_insn_free	,	F_7
next	,	V_47
"%05d CHECK_EXISTS\t%s\n"	,	L_4
"%05d READ_TREE\t\t%s -&gt; reg#%u\n"	,	L_5
insns	,	V_42
to_list	,	V_77
numeric	,	V_25
MK_RANGE	,	V_29
g_ptr_array_len	,	F_17
fv	,	V_66
fvalue_type_name	,	F_12
finfos	,	V_58
fvalue_gt	,	V_87
from_list	,	V_76
READ_TREE	,	V_27
finfo	,	V_59
value	,	V_9
g_list_free	,	F_24
d_range	,	V_75
"%05d IF-FALSE-GOTO\t%u\n"	,	L_29
op	,	V_1
"reg#%u"	,	L_7
"%05d ANY_GT\t\treg#%u == reg#%u\n"	,	L_19
fvalue_ge	,	V_88
"%05d ANY_CONTAINS\treg#%u contains reg#%u\n"	,	L_24
length	,	V_16
"%05d ANY_EQ\t\treg#%u == reg#%u\n"	,	L_17
"%05d ANY_GE\t\treg#%u == reg#%u\n"	,	L_20
hfinfo	,	V_43
CALL_FUNCTION	,	V_28
to_reg	,	V_74
"%05d NOT\n"	,	L_26
param1	,	V_81
param2	,	V_82
free_register_overhead	,	F_23
DRANGE_NODE_END_T_TO_THE_END	,	V_55
DRANGE	,	V_11
g_list_prepend	,	F_18
AGAIN	,	V_83
mk_range	,	F_25
"%d:%d"	,	L_12
wmem_free	,	F_13
proto_tree	,	T_10
