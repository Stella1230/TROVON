shift	,	V_8
deprecated	,	V_24
PPC_OPERAND_VSR	,	V_59
PPC_OPERAND_FCR	,	V_63
"vs%ld"	,	L_7
","	,	L_3
lookup_powerpc	,	F_4
"%-7s "	,	L_1
PPC_OPERAND_FSL	,	V_62
powerpc_opcode	,	V_17
"fsl%ld"	,	L_8
"lt"	,	L_12
"cr%ld"	,	L_11
PPC_OPERAND_FAKE	,	V_54
bitm	,	V_9
PPC_OPCODE_POWER4	,	V_31
"fcr%ld"	,	L_9
PPC_OPCODE_POWER5	,	V_34
PPC_OPCODE_POWER6	,	V_38
cbnames	,	V_68
PPC_OPCODE_POWER7	,	V_40
invalid	,	V_6
PPC_OPCODE_POWER8	,	V_43
PPC_OPERAND_GPR_0	,	V_56
PPC_OPCODE_POWER9	,	V_47
PPC_OPCODE_ALTIVEC	,	V_32
CPU_FTRS_POWER9	,	V_46
CPU_FTRS_POWER8	,	V_42
CPU_FTRS_POWER5	,	V_33
CPU_FTRS_POWER7	,	V_39
CPU_FTRS_POWER6	,	V_37
flags	,	V_10
CPU_FTRS_CELL	,	V_35
skip_optional_operands	,	F_2
PPC_OPERAND_OPTIONAL	,	V_16
top	,	V_12
PPC_OP	,	F_5
"f%ld"	,	L_5
PPC_OPERAND_GPR	,	V_55
PPC_OPERAND_CR_BIT	,	V_67
cc	,	V_70
"gt"	,	L_13
cpu_has_feature	,	F_7
insn_is_short	,	V_27
PPC_OPCODE_HTM	,	V_44
"v%ld"	,	L_6
cr	,	V_69
PPC_OPCODE_ANY	,	V_49
insn	,	V_3
PPC_OPCODE_ALTIVEC2	,	V_45
".long 0x%lx"	,	L_20
"%ld"	,	L_10
operand_value_powerpc	,	F_1
opcode_end	,	V_19
opindex	,	V_13
PPC_OPERAND_ABSOLUTE	,	V_61
operand	,	V_2
ppc_cpu_t	,	T_1
"%s"	,	L_2
dialect	,	V_4
"eq"	,	L_14
opcode	,	V_18
print_address	,	F_8
skip_optional	,	V_52
"("	,	L_19
powerpc_opcodes	,	V_21
powerpc_operand	,	V_1
PPC_OPERAND_FPR	,	V_57
"4*cr%d+"	,	L_16
PPC_OPERAND_UDI	,	V_64
print_insn_powerpc	,	F_6
"r%ld"	,	L_4
PPC_OPCODE_64	,	V_30
powerpc_operands	,	V_14
ppc_optional_operand_value	,	F_3
PPC_OPERAND_PARENS	,	V_71
extract	,	V_7
name	,	V_53
PPC_OPERAND_RELATIVE	,	V_60
")"	,	L_18
PPC_OPERAND_SIGNED	,	V_11
PPC_OPERAND_NEXT	,	V_15
memaddr	,	V_26
"%d"	,	L_17
value	,	V_5
mask	,	V_23
powerpc_num_opcodes	,	V_22
operands	,	V_25
op	,	V_20
PPC_OPCODE_VSX	,	V_41
PPC_OPCODE_VSX3	,	V_48
PPC_OPCODE_PPC	,	V_28
need_paren	,	V_51
PPC_OPCODE_CELL	,	V_36
"so"	,	L_15
PPC_OPERAND_CR_REG	,	V_65
need_comma	,	V_50
PPC_OPCODE_COMMON	,	V_29
PPC_OPCODE_VLE	,	V_66
PPC_OPERAND_VR	,	V_58
