GPIO_DIR	,	V_49
GPIO_INT_STAT	,	V_33
ENOMEM	,	V_44
parent	,	V_51
ftgpio_gpio	,	V_5
ftgpio_gpio_irqchip	,	V_55
dev_info	,	F_31
reg_both	,	V_12
GPIO_INT_LEVEL	,	V_16
devm_gpiochip_add_data	,	F_29
IRQ_TYPE_EDGE_FALLING	,	V_21
GPIO_INT_BOTH_EDGE	,	V_17
pdev	,	V_36
"unable to init generic GPIO\n"	,	L_1
dev	,	V_38
u32	,	T_1
irq_desc	,	V_27
GPIO_DATA_CLR	,	V_48
platform_get_irq	,	F_26
val	,	V_9
ret	,	V_42
res	,	V_40
"FTGPIO010"	,	L_2
offset	,	V_31
resource	,	V_39
ftgpio_gpio_ack_irq	,	F_1
THIS_MODULE	,	V_53
IRQ_TYPE_LEVEL_LOW	,	V_24
PTR_ERR	,	F_25
GPIO_INT_TYPE	,	V_15
ftgpio_gpio_irq_handler	,	F_12
irq_desc_get_chip	,	F_14
bgpio_init	,	F_27
reg_level	,	V_13
irq_set_handler_locked	,	F_11
IRQ_TYPE_LEVEL_HIGH	,	V_22
generic_handle_irq	,	F_17
GFP_KERNEL	,	V_43
platform_get_resource	,	F_22
chained_irq_enter	,	F_15
device	,	V_37
irq_data	,	V_1
ftgpio_gpio_set_irq_type	,	F_10
ftgpio_gpio_mask_irq	,	F_7
desc	,	V_28
devm_kzalloc	,	F_21
GPIO_INT_CLR	,	V_8
chained_irq_exit	,	F_19
ftgpio_gpio_probe	,	F_20
irqdomain	,	V_34
GPIO_DATA_IN	,	V_46
IRQ_TYPE_NONE	,	V_56
reg_type	,	V_14
handle_level_irq	,	V_23
gpiochip_irqchip_add	,	F_30
ftgpio_gpio_unmask_irq	,	F_9
dev_err	,	F_28
gpiochip_get_data	,	F_3
IRQ_TYPE_EDGE_BOTH	,	V_18
irqd_to_hwirq	,	F_6
for_each_set_bit	,	F_16
irq_data_get_irq_chip_data	,	F_2
irq_find_mapping	,	F_18
handle_bad_irq	,	V_25
gc	,	V_4
GPIO_INT_EN	,	V_10
IORESOURCE_MEM	,	V_45
irq_chip	,	V_29
gpiochip_set_chained_irqchip	,	F_32
mask	,	V_11
handle_edge_irq	,	V_19
GPIO_DATA_SET	,	V_47
owner	,	V_52
stat	,	V_32
devm_ioremap_resource	,	F_23
readl	,	F_8
d	,	V_2
writel	,	F_4
g	,	V_6
irqchip	,	V_30
irq	,	V_41
label	,	V_50
BIT	,	F_5
IRQ_TYPE_EDGE_RISING	,	V_20
EINVAL	,	V_26
"could not add irqchip\n"	,	L_3
gpio_chip	,	V_3
platform_device	,	V_35
GPIO_INT_MASK	,	V_54
"FTGPIO010 @%p registered\n"	,	L_4
base	,	V_7
irq_desc_get_handler_data	,	F_13
IS_ERR	,	F_24
