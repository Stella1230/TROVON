"SOCKET"	,	L_3
usage	,	F_1
"{\n"	,	L_15
"0x%08xUL\n"	,	L_28
"\n#endif\n"	,	L_25
fout	,	V_12
"#define SECINITSID_%s"	,	L_12
"%2d\n"	,	L_10
s2	,	V_3
errno	,	V_15
" "	,	L_9
initial_sid_to_string	,	V_21
"#define SECCLASS_%s"	,	L_8
"\tswitch (kern_tclass) {\n"	,	L_17
"Could not open %s for writing:  %s\n"	,	L_5
"\n#define SECINITSID_NUM %d\n"	,	L_13
"%s:  out of memory\n"	,	L_2
stderr	,	V_5
substr	,	V_14
"w"	,	L_4
"\t\tsock = true;\n"	,	L_19
"usage: %s flask.h av_permissions.h\n"	,	L_1
progname	,	V_1
name	,	V_17
secclass_map	,	V_16
"\tbool sock = false;\n\n"	,	L_16
"\t}\n\n"	,	L_22
"#ifndef _SELINUX_FLASK_H_\n#define _SELINUX_FLASK_H_\n\n"	,	L_7
"#ifndef _SELINUX_AV_PERMISSIONS_H_\n#define _SELINUX_AV_PERMISSIONS_H_\n\n"	,	L_26
"\treturn sock;\n"	,	L_23
"}\n"	,	L_24
argv	,	V_7
"\tcase SECCLASS_%s:\n"	,	L_18
security_class_mapping	,	V_18
perms	,	V_20
stoupperx	,	F_2
FILE	,	T_1
map	,	V_19
argc	,	V_6
"#define %s__%s"	,	L_27
max	,	F_4
isids_len	,	V_11
i	,	V_8
j	,	V_9
k	,	V_10
"\nstatic inline bool security_is_socket_class(u16 kern_tclass)\n"	,	L_14
"\tdefault:\n"	,	L_21
p	,	V_4
"/* This file is automatically generated.  Do not edit. */\n"	,	L_6
s	,	V_2
"\t\tbreak;\n"	,	L_20
strdup	,	F_3
needle	,	V_13
"\n"	,	L_11
