parent	,	V_31
ENOMEM	,	V_45
handler	,	V_66
irq_set_chained_handler	,	F_26
mod	,	V_9
gc_alloc_fail	,	V_51
IRQ_NOREQUEST	,	V_48
tb10x_irq_set_type	,	F_5
irq_set_type	,	V_59
IRQ_NOPROBE	,	V_49
irq_desc	,	V_25
irq_domain	,	V_27
release_mem_region	,	F_29
AB_IRQCTL_SRC_MODE	,	V_12
val	,	V_4
ictl	,	V_30
im	,	V_8
IRQ_TYPE_LEVEL_LOW	,	V_18
AB_IRQCTL_INT_STATUS	,	V_23
of_irq_count	,	F_17
flow_type	,	V_7
__func__	,	V_20
IRQ_TYPE_LEVEL_HIGH	,	V_16
domain	,	V_28
pr_err	,	F_9
EBADR	,	V_22
irq_data	,	V_5
irq_mask	,	V_55
of_address_to_resource	,	F_18
of_tb10x_init_irq	,	F_16
IRQ_TYPE_NONE	,	V_17
IRQ_SET_MASK_OK	,	V_24
"%s: Cannot assign multiple trigger modes to IRQ %d.\n"	,	L_1
pol	,	V_10
handle_level_irq	,	V_47
device_node	,	V_29
IRQ_TYPE_EDGE_BOTH	,	V_62
AB_IRQCTL_MAXIRQ	,	V_43
irq_data_get_irq_chip_data	,	F_6
EBUSY	,	V_41
irq_generic_chip_ops	,	V_44
"%s: Could not register interrupt domain.\n"	,	L_5
irq_gc_mask_set_bit	,	V_58
chip	,	V_54
irq_gc_ack_set_bit	,	V_64
uint32_t	,	T_2
irq	,	V_21
i	,	V_32
irq_ack	,	V_63
regs	,	V_60
IRQ_TYPE_EDGE_RISING	,	V_19
"%s: No registers declared in DeviceTree.\n"	,	L_2
EINVAL	,	V_39
irq_reg_writel	,	F_2
request_mem_region	,	F_19
ab_irqctl_readreg	,	F_3
irq_domain_remove	,	F_27
__init	,	T_3
data	,	V_6
irq_reg_readl	,	F_4
__iomem	,	T_4
ack	,	V_65
irq_gc_mask_clr_bit	,	V_56
IRQ_TYPE_EDGE_FALLING	,	V_15
irq_gc_lock	,	F_7
u32	,	T_1
reg	,	V_3
ioremap_fail	,	V_42
ret	,	V_33
resource	,	V_35
irq_domain_add_linear	,	F_22
irqd_set_trigger_type	,	F_10
"%s: Could not allocate generic interrupt chip.\n"	,	L_6
"%s: ioremap failed.\n"	,	L_4
irq_setup_alt_chip	,	F_11
ioremap	,	F_21
name	,	V_38
irq_of_parse_and_map	,	F_24
generic_handle_irq	,	F_14
tb10x_irq_cascade	,	F_12
desc	,	V_26
irq_domain_add_fail	,	V_46
AB_IRQCTL_INT_POLARITY	,	V_69
iounmap	,	F_28
chip_types	,	V_52
irq_alloc_domain_generic_chips	,	F_23
AB_IRQCTL_SRC_POLARITY	,	V_13
AB_IRQCTL_INT_ENABLE	,	V_61
IRQF_TRIGGER_MASK	,	V_14
IRQ_GC_INIT_MASK_CACHE	,	V_50
mem	,	V_36
AB_IRQCTL_INT_MODE	,	V_68
irq_find_mapping	,	F_15
"%s: Request mem region failed.\n"	,	L_3
irq_chip_generic	,	V_1
reg_base	,	V_37
gc	,	V_2
mask	,	V_11
handle_edge_irq	,	V_67
nrirqs	,	V_34
start	,	V_40
irq_unmask	,	V_57
IRQ_TYPE_LEVEL_MASK	,	V_53
ab_irqctl_writereg	,	F_1
resource_size	,	F_20
irq_gc_unlock	,	F_8
irq_set_handler_data	,	F_25
irq_desc_get_handler_data	,	F_13
