irq_set_chip_and_handler	,	F_22
vic_resume	,	F_5
vic_mask_irq	,	F_15
vic_clear_interrupts	,	F_20
vic_set_irq_sources	,	F_21
vic_sources	,	V_43
__iomem	,	T_1
"VIC @%p: id 0x%08x, vendor 0x%02x\n"	,	L_4
vic_chip	,	V_44
bit	,	V_36
irq_set_chip_data	,	F_23
vic	,	V_8
base_irq	,	V_33
VIC_PL190_VECT_ADDR	,	V_40
reg	,	V_3
u32	,	T_3
AMBA_VENDOR_ARM	,	V_57
vic_disable	,	F_19
resume_irqs	,	V_24
PAGE_MASK	,	V_49
id	,	V_21
amba_vendor	,	V_51
VIC_INT_SOFT	,	V_19
ARRAY_SIZE	,	F_12
vic_suspend	,	F_8
VIC_INT_ENABLE	,	V_16
KERN_WARNING	,	V_56
vic_devices	,	V_23
VIC_PL190_DEF_VECT_ADDR	,	V_6
VIC_INT_SOFT_CLEAR	,	V_20
"%s: too few VICs, increase CONFIG_ARM_VIC_NR\n"	,	L_3
vic_pm_register	,	F_11
vic_2nd_block	,	V_48
int_select	,	V_11
vic_init2	,	F_1
VIC_ITCR	,	V_39
IRQF_PROBE	,	V_47
__func__	,	V_10
arg1	,	V_30
"VIC: unknown vendor, continuing anyways\n"	,	L_5
VIC_VECT_CNTL0	,	V_4
vic_device	,	V_7
irq_data	,	V_31
vic_syscore_ops	,	V_25
resume_sources	,	V_27
soft_int	,	V_18
resume_one_vic	,	F_3
KERN_INFO	,	V_54
int_enable	,	V_15
printk	,	F_4
VIC_VECT_CNTL_ENABLE	,	V_5
vic_init	,	F_26
handle_level_irq	,	V_45
cellid	,	V_50
vic_ack_irq	,	F_13
vic_unmask_irq	,	F_16
AMBA_VENDOR_ST	,	V_55
vic_pm_init	,	F_9
irq_data_get_irq_chip_data	,	F_14
irq_start	,	V_42
vendor	,	V_52
protect	,	V_13
IRQF_VALID	,	V_46
addr	,	V_53
value	,	V_41
on	,	V_34
VIC_IRQ_STATUS	,	V_38
readl	,	F_7
d	,	V_32
writel	,	F_2
VIC_INT_ENABLE_CLEAR	,	V_17
i	,	V_2
"%s: suspending vic at %p\n"	,	L_2
irq	,	V_26
set_irq_flags	,	F_24
vic_set_wake	,	F_18
off	,	V_35
suspend_one_vic	,	F_6
VIC_INT_SELECT	,	V_12
EINVAL	,	V_37
vic_init_st	,	F_25
"%s: resuming vic at %p\n"	,	L_1
vic_from_irq	,	F_17
v	,	V_28
KERN_ERR	,	V_29
__init	,	T_2
vic_id	,	V_22
KERN_DEBUG	,	V_9
VIC_PROTECT	,	V_14
register_syscore_ops	,	F_10
base	,	V_1
