"\tsignature: %c%c%c%c\n"	,	L_3
"ecx = 0x%.8x\n"	,	L_18
"Failed!\n"	,	L_1
"Note also that some BIOS do not support the initial "	,	L_20
"work.\nFor this, you need to pass some arguments to "	,	L_22
"edx = 0x%.8x\n"	,	L_19
"try out the default value by passing "	,	L_10
"\tcommand port = 0x%.4x\n"	,	L_4
"smi_cmd=0x82 to the module\n ON YOUR OWN "	,	L_11
"eax = 0x%.8x\n"	,	L_16
"ebx = 0x%.8x\n"	,	L_17
"BIOS supports GSIC call:\n"	,	L_2
"doesn't work out of the box,\nyou may want to "	,	L_9
"the speedstep-smi driver:\n"	,	L_23
"GSIC call, but the newer\nspeedstep-smi driver may "	,	L_21
ecx	,	V_7
eax	,	V_4
"\tsmi_cmd=0x?? smi_port=0x?? smi_sig=1\n"	,	L_24
"\tcommand =      0x%.4x\n"	,	L_5
"non-default command value. If speedstep-smi "	,	L_8
"\nUnfortunately, you have to know what exactly are "	,	L_25
LRMI_init	,	F_1
"BIOS DOES NOT support GSIC call.  Dumping registers anyway:\n"	,	L_15
"\tflags =        0x%.8x\n"	,	L_7
"RISK.\n"	,	L_12
"smi_cmd and smi_port, and this\nis system "	,	L_26
"non-default command port. If speedstep-smi "	,	L_13
LRMI_regs	,	V_1
retval	,	V_3
"\tevent port =   0x%.8x\n"	,	L_6
r	,	V_2
"smi_port=0x82 to the module\n ON YOUR OWN "	,	L_14
"dependant.\n"	,	L_27
edx	,	V_5
ebx	,	V_6
LRMI_int	,	F_2
