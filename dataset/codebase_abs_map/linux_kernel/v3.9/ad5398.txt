ENOMEM	,	V_31
min_uA	,	V_6
df	,	V_28
i2c_client	,	V_8
data	,	V_10
DIV_ROUND_UP	,	F_12
ad5398_disable	,	F_16
ad5398_exit	,	F_28
current_level	,	V_7
current_bits	,	V_32
dev_dbg	,	F_13
i2c_master_send	,	F_8
ad5398_read_reg	,	F_2
be16_to_cpu	,	F_5
ad5398_write_reg	,	F_6
ad5398_init	,	F_26
dev	,	V_13
"I2C read error\n"	,	L_1
id	,	V_21
ad5398_chip_info	,	V_1
i2c_device_id	,	V_20
regulator_init_data	,	V_22
val	,	V_11
ret	,	V_12
"I2C write error\n"	,	L_2
i2c_get_clientdata	,	F_24
ad5398_reg	,	V_33
max_uA	,	V_5
PTR_ERR	,	F_21
"%s regulator driver is registered.\n"	,	L_5
AD5398_CURRENT_EN_MASK	,	V_19
current_offset	,	V_17
regulator_dev	,	V_14
name	,	V_34
GFP_KERNEL	,	V_30
range_uA	,	V_4
rdev_get_drvdata	,	F_10
ad5398_is_enabled	,	F_14
devm_kzalloc	,	F_18
ad5398_calc_current	,	F_1
ad5398_get_current_limit	,	F_9
"changing current %duA\n"	,	L_3
ad5398_enable	,	F_15
driver_data	,	V_29
dev_err	,	F_4
"failed to register %s %s\n"	,	L_4
i2c_master_recv	,	F_3
ad5398_current_data_format	,	V_27
regulator_unregister	,	F_25
rdev	,	V_15
ad5398_set_current_limit	,	F_11
client	,	V_9
selector	,	V_3
cpu_to_be16	,	F_7
chip	,	V_2
err	,	V_35
init_data	,	V_23
regulator_config	,	V_25
regulator_register	,	F_19
ad5398_driver	,	V_36
ad5398_probe	,	F_17
EINVAL	,	V_18
i2c_set_clientdata	,	F_22
current_mask	,	V_16
__init	,	T_1
__exit	,	T_2
i2c_add_driver	,	F_27
i2c_del_driver	,	F_29
platform_data	,	V_24
config	,	V_26
ad5398_remove	,	F_23
IS_ERR	,	F_20
