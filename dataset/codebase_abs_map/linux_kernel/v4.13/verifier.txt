PTR_TO_CTX	,	V_90
"invalid func %s#%d\n"	,	L_72
BPF_ALU64_IMM	,	F_103
BPF_MOV	,	V_220
is_pointer_value	,	F_33
"jump out of range from insn %d to %d\n"	,	L_99
ebpf_jit_enabled	,	F_106
"BPF_LD_IMM64 uses reserved fields\n"	,	L_95
may_access_skb	,	F_69
fdget	,	F_86
log_size	,	V_328
"misaligned packet access off %d+%d+%d size %d\n"	,	L_48
strict	,	V_129
ARRAY_SIZE	,	F_3
bpf_insn	,	V_43
"R%d is invalid\n"	,	L_35
unlikely	,	F_52
evaluate_reg_imm_alu	,	F_55
dst_reg_type	,	V_284
new_sl	,	V_272
__user	,	T_5
allow_ptr_leaks	,	V_66
mark_map_regs	,	F_65
bpf_prog_type	,	V_239
slot_type	,	V_101
check_map_access_adj	,	F_28
check_map_prealloc	,	F_82
"R%d min value is negative, either use unsigned or 'var &amp;= const'\n"	,	L_69
src_reg	,	V_52
bpf_helper_changes_pkt_data	,	F_47
bpf_insn_aux_data	,	V_195
size	,	V_98
BPF_JA	,	V_70
"invalid map_ptr to access map-&gt;key\n"	,	L_66
check_ptr_alignment	,	F_36
"cannot write into packet\n"	,	L_55
"invalid BPF_ALU opcode %x\n"	,	L_87
BPF_MOD	,	V_221
key_size	,	V_27
""	,	L_15
rold	,	V_268
"(%02x) %sr%d %s %sr%d\n"	,	L_13
stack_depth	,	V_135
"unreachable insn %d\n"	,	L_103
BPF_K	,	V_200
"R%d pointer arithmetic prohibited\n"	,	L_84
BPF_JGE	,	V_233
cur_stack	,	V_252
BPF_H	,	V_311
"(%02x) *(%s *)(r%d %+d) = r%d\n"	,	L_17
"ARG_CONST_SIZE cannot be first argument\n"	,	L_68
BPF_CALL	,	V_69
bpf_insn_access_aux	,	V_120
BPF_ALU64	,	V_48
changes_data	,	V_178
BPF_LDST_BYTES	,	F_101
BPF_REG_6	,	V_242
BPF_REG_5	,	V_186
BPF_REG_4	,	V_185
BPF_JGT	,	V_231
BPF_X	,	V_49
BPF_REG_3	,	V_184
CONST_IMM	,	V_15
BPF_W	,	V_136
BPF_REG_2	,	V_183
"invalid stack off=%d size=%d\n"	,	L_53
__bpf_map_get	,	F_87
fdput	,	F_90
BPF_REGISTER_MIN_RANGE	,	V_30
"invalid BPF_JMP opcode %x\n"	,	L_91
replace_map_fd_with_map_ptr	,	F_84
prev_insn_idx	,	V_74
e	,	V_244
ARG_CONST_MAP_PTR	,	V_150
ret_type	,	V_190
f	,	V_293
"(%02x) r%d = *(%s *)(r%d %+d)\n"	,	L_23
BPF_REG_1	,	V_89
i	,	V_10
BPF_REG_0	,	V_192
j	,	V_291
BPF_FUNC_skb_under_cgroup	,	V_165
"BPF_LDX uses reserved fields\n"	,	L_122
",min_value=%lld"	,	L_6
map_ptr	,	V_26
STACK_MISC	,	V_100
"BPF_STX uses reserved fields\n"	,	L_123
t	,	V_9
BPF_PROG_TYPE_LWT_XMIT	,	V_116
zero_size_allowed	,	V_138
BPF_LD	,	V_59
w	,	V_243
ARG_ANYTHING	,	V_144
SRC_OP	,	V_94
DST_OP_NO_MARK	,	V_224
BPF_WRITE	,	V_112
BPF_PROG_TYPE_SCHED_ACT	,	V_114
"BUG_ldx_%02x\n"	,	L_22
clear_all_pkt_pointers	,	F_45
next_insn	,	V_294
insn_aux	,	V_196
bpf_analyzer	,	F_117
print_verifier_state	,	F_4
BPF_JEQ	,	V_229
opcode	,	V_68
new_prog	,	V_303
insn_state	,	V_246
used_map_cnt	,	V_295
reg	,	V_7
reg_arg_type	,	V_92
"BPF_ST uses reserved fields\n"	,	L_112
"pop stack internal bug\n"	,	L_102
PTR_TO_MAP_VALUE	,	V_23
info	,	V_121
ret	,	V_259
BPF_ARSH	,	V_223
mark_reg_not_init	,	F_16
insn_hook	,	V_275
bpf_verifier_lock	,	V_326
analyzer_ops	,	V_122
add_imm	,	V_201
check_state	,	V_262
count	,	V_172
prog_flags	,	V_332
"helper access to the packet is not allowed\n"	,	L_64
ilog2	,	F_59
this_branch	,	V_237
prev_dst_type	,	V_283
"invalid BPF_LD_IMM insn\n"	,	L_94
"(%02x) lock *(%s *)(r%d %+d) += r%d\n"	,	L_18
rcur	,	V_269
BPF_B	,	V_187
"BPF_JA uses reserved fields\n"	,	L_114
fd	,	V_292
",max_value=%llu"	,	L_7
"%lld"	,	L_3
may_access_direct_pkt_data	,	F_29
bpf_size_to_bytes	,	F_38
"BPF_END uses reserved fields\n"	,	L_83
BPF_RSH	,	V_209
"(%02x) %sr%d %s %s%d\n"	,	L_16
fn	,	V_171
capable	,	F_113
PTR_TO_PACKET	,	V_18
bpf_verifier_state	,	V_4
"invalid map_ptr to access map-&gt;value\n"	,	L_67
BPF_F_NO_PREALLOC	,	V_288
stack_slot_type	,	V_38
dst_align	,	V_216
check_ld_abs	,	F_70
arg3_type	,	V_175
"div by zero\n"	,	L_89
gpl_compatible	,	V_180
BPF_FUNC_map_lookup_elem	,	V_169
is_narrower_load	,	V_307
kmalloc	,	F_15
"invalid insn idx %d insn_cnt %d\n"	,	L_104
",aux_off=%u"	,	L_9
min_val	,	V_214
class	,	V_45
"same insn cannot be used with different pointers\n"	,	L_111
aux_off	,	V_34
states_equal	,	F_75
BPF_OP	,	F_9
BRANCH	,	V_248
BPF_OR	,	V_210
"BPF_XADD uses reserved fields\n"	,	L_58
"unrecognized bpf_ld_imm64 insn\n"	,	L_125
BPF_REG_SIZE	,	V_37
env	,	V_42
"misaligned access off %d size %d\n"	,	L_50
RET_INTEGER	,	V_191
imm_log2	,	V_204
BPF_STX	,	V_53
BPF_CLASS	,	F_7
new_data	,	V_300
check_packet_access	,	F_30
__BPF_FUNC_MAX_ID	,	V_3
BPF_SUB	,	V_211
max_value	,	V_31
insn_idx	,	V_77
ENOMEM	,	V_260
expected_type	,	V_142
map_gen_lookup	,	V_318
bpf_prog	,	V_289
print_bpf_insn	,	F_6
bpf_ldst_string	,	V_55
old_data	,	V_301
BUILD_BUG_ON	,	F_2
"attempt to corrupt spilled pointer on stack\n"	,	L_54
"unknown insn class %d\n"	,	L_118
release_maps	,	F_92
"(%02x) call %s#%d\n"	,	L_28
id	,	V_1
adjust_insn_aux_data	,	F_95
"Packet access is only %u byte aligned, %d byte access not allowed\n"	,	L_47
vzalloc	,	F_96
BPF_F_STRICT_ALIGNMENT	,	V_333
get_func_proto	,	V_179
"kernel subsystem misconfigured func %s#%d\n"	,	L_75
check_raw_mode	,	F_44
ENOSPC	,	V_337
"invalid access to packet, off=%d size=%d, R%d(id=%d,off=%d,r=%d)\n"	,	L_45
sln	,	V_321
check_mem_access	,	F_37
arg4_type	,	V_176
"perf_event programs can only use preallocated hash map\n"	,	L_120
check_val_ptr_alignment	,	F_35
"BPF_LD_[ABS|IND] instructions not allowed for this program type\n"	,	L_96
BPF_LDX	,	V_58
ARG_PTR_TO_CTX	,	V_151
NOT_INIT	,	V_13
BPF_TAIL_CALL	,	V_317
"R%d leaks addr into ctx\n"	,	L_52
BPF_FUNC_tail_call	,	V_158
RET_PTR_TO_MAP_VALUE_OR_NULL	,	V_194
BPF_MEM	,	V_54
vfree	,	F_97
"(%02x) *(%s *)(r%d %+d) = %d\n"	,	L_21
copy_to_user	,	F_114
BPF_DW	,	V_63
ARG_PTR_TO_UNINIT_MEM	,	V_153
BPF_AND	,	V_208
BPF_SRC	,	F_8
src_align	,	V_217
insn_processed	,	V_276
"(ks=%d,vs=%d,id=%u)"	,	L_5
raw_mode	,	V_139
map	,	V_103
mark_reg_unknown_value_and_range	,	F_22
cond_resched	,	F_81
"corrupted spill memory\n"	,	L_39
PTR_TO_PACKET_END	,	V_97
check_pkt_ptr_alignment	,	F_34
err	,	V_84
max	,	F_54
",aux_off_align=%u"	,	L_10
BPF_ALU	,	V_47
cnt	,	V_299
EFAULT	,	V_154
ARG_PTR_TO_MEM	,	V_152
"R%d leaks addr into packet\n"	,	L_56
off	,	V_19
verbose	,	F_5
min_value	,	V_29
evaluate_reg_imm_alu_unknown	,	F_53
check_ctx_access	,	F_31
varlen_map_value_access	,	V_105
peek_stack	,	V_261
"R%d type=%s expected=%s\n"	,	L_60
BPF_COMPLEXITY_LIMIT_INSNS	,	V_278
strict_alignment	,	V_132
bpf_user_rnd_init_once	,	F_105
bpf_reg_type	,	V_8
BPF_MAP_TYPE_STACK_TRACE	,	V_162
BPF_NEG	,	V_219
used_maps	,	V_296
mode	,	V_241
spilled_regs	,	V_40
u32	,	V_64
ARG_CONST_SIZE	,	V_148
BPF_FUNC_perf_event_read	,	V_160
is_valid_access	,	V_125
value_from_signed	,	V_91
BPF_MAP_TYPE_HASH_OF_MAPS	,	V_168
bpf_verifier_env	,	V_41
FALLTHROUGH	,	V_245
"kernel subsystem misconfigured verifier\n"	,	L_76
"%d: "	,	L_110
"invalid indirect read from stack off %d+%d size %d\n"	,	L_62
BPF_FUNC_current_task_under_cgroup	,	V_166
BPF_PROG_TYPE_LWT_OUT	,	V_111
"BPF_LD_[ABS|IND] uses reserved fields\n"	,	L_97
"cannot pass map_type %d into func %s#%d\n"	,	L_71
had_id	,	V_203
"bpf verifier is misconfigured\n"	,	L_127
ARG_PTR_TO_MAP_VALUE	,	V_146
"BPF_CALL uses reserved fields\n"	,	L_113
"at the time of BPF_LD_ABS|IND R6 != pointer to skb\n"	,	L_98
arg1_type	,	V_173
imm64	,	V_238
code	,	V_46
__is_pointer_value	,	F_32
tmp_reg	,	V_199
"cannot add integer value with %lld upper zero bits to ptr_to_packet\n"	,	L_81
false_reg	,	V_226
seen_direct_write	,	V_118
min_align	,	V_33
bpf_alu_string	,	V_51
BPF_FUNC_get_route_realm	,	V_313
ARG_CONST_SIZE_OR_ZERO	,	V_149
head	,	V_78
bpf_access_type	,	V_108
pkt_access	,	V_117
free_states	,	F_107
MAX_PACKET_OFF	,	V_202
bpf_patch_insn_single	,	F_99
BPF_FUNC_perf_event_output	,	V_161
attr	,	V_323
CAP_SYS_ADMIN	,	V_336
ARG_DONTCARE	,	V_143
BPF_MAP_TYPE_PROG_ARRAY	,	V_157
"BUG_st_%02x\n"	,	L_20
BPF_PROG_TYPE_SCHED_CLS	,	V_113
check_alu_op	,	F_60
insnsi	,	V_257
func_id	,	V_155
BPF_FUNC_get_prandom_u32	,	V_315
BPF_MAP_TYPE_ARRAY_OF_MAPS	,	V_167
BPF_PROG_TYPE_PERF_EVENT	,	V_290
u64	,	T_2
"(u32) "	,	L_14
BPF_REG_FP	,	V_87
varlen_map_access	,	V_267
"unknown"	,	L_1
check_cond_jmp_op	,	F_66
"bpf verifier narrow ctx access misconfigured\n"	,	L_128
log_ubuf	,	V_324
bpf_jmp_string	,	V_72
IS_ERR	,	F_88
cb_access	,	V_316
delta	,	V_305
patch	,	V_302
s32	,	T_3
len	,	V_249
"R%d leaks addr into helper function\n"	,	L_63
gen_prologue	,	V_309
MAX_BPF_REG	,	V_11
insn_aux_data	,	V_126
BPF_PROG_TYPE_XDP	,	V_115
offsetofend	,	F_76
"fd %d is not pointing to valid bpf_map\n"	,	L_126
skip_full_check	,	V_335
state	,	V_5
"R%d leaks addr into map\n"	,	L_51
"unsupported arg_type %d\n"	,	L_65
"R%d min value is outside of the array range\n"	,	L_43
bpf_verifier_state_list	,	V_271
do_print_state	,	V_277
check_call	,	F_46
"addition of negative constant to packet pointer is not allowed\n"	,	L_78
old	,	V_265
"(%02x) if r%d %s 0x%x goto pc%+d\n"	,	L_32
adjust_reg_min_max_vals	,	F_58
insn_cnt	,	V_258
init_reg_state	,	F_18
ld_imm64_to_map_ptr	,	F_67
meta	,	V_107
"BPF_NEG uses reserved fields\n"	,	L_82
stack_size	,	V_82
GFP_KERNEL	,	V_83
UNKNOWN_VALUE	,	V_21
bpf_class_string	,	V_73
cur	,	V_266
reset_reg_range_values	,	F_21
BPF_COMPLEXITY_LIMIT_STACK	,	V_85
reg_type	,	V_119
"invalid read from stack off %d+%d size %d\n"	,	L_40
"invalid bpf_ld_imm64 insn\n"	,	L_124
err_unlock	,	V_331
target_size	,	V_308
PTR_TO_MAP_VALUE_OR_NULL	,	V_24
BPF_END	,	V_218
mutex_unlock	,	F_116
min	,	F_49
other_branch	,	V_236
ip_align	,	V_130
check_func_arg	,	F_42
sl	,	V_273
cur_state	,	V_79
st	,	V_80
arg5_type	,	V_177
u8	,	T_1
check_map_prog_compatibility	,	F_83
bpf_size	,	V_133
"cannot call GPL only function from proprietary program\n"	,	L_74
value_regno	,	V_99
kcalloc	,	F_73
regs	,	V_12
mark_explored	,	V_263
is_spillable_regtype	,	F_24
push_insn	,	F_71
s64	,	T_4
insn	,	V_44
"BPF_JMP uses reserved fields\n"	,	L_92
bpf_map_inc	,	F_91
"(%02x) %s\n"	,	L_33
FRAME_PTR	,	V_88
" R%d=%s"	,	L_2
mutex_lock	,	F_110
bpf_verifier_ops	,	V_304
DST_OP	,	V_96
"unknown func %s#%d\n"	,	L_73
RET_VOID	,	V_193
BPF_PSEUDO_MAP_FD	,	V_65
"perf_event programs can only use preallocated inner hash map\n"	,	L_121
insn_stack	,	V_254
BPF_DIV	,	V_222
map_type	,	V_156
"constant %d is too large to add to packet pointer\n"	,	L_79
check_helper_mem_access	,	F_41
bpf_prog_calc_tag	,	F_85
"%d:"	,	L_108
calc_align	,	F_57
log_buf	,	V_327
priv	,	V_340
push_stack	,	F_14
func_id_str	,	V_2
BPF_ADD	,	V_205
__ilog2_u64	,	F_51
BPF_MAP_TYPE_PERF_EVENT_ARRAY	,	V_159
STACK_SPILL	,	V_39
bpf_reg_state	,	V_6
log_level	,	V_104
check_stack_write	,	F_25
check_reg_arg	,	F_23
BPF_ABS	,	V_60
reg_set_min_max_inv	,	F_63
is_range	,	V_228
mark_map_reg	,	F_64
ops	,	V_124
ext_analyzer_insn_hook	,	F_78
"invalid access to map value, value_size=%d off=%d size=%d\n"	,	L_41
CALLER_SAVED_REGS	,	V_188
find_good_pkt_pointers	,	F_61
analyzer_priv	,	V_341
"unknown return type %d of func %s#%d\n"	,	L_77
DISCOVERED	,	V_247
next	,	V_81
src_reg_type	,	V_281
__mark_reg_unknown_value	,	F_19
"(id=%d,off=%d,r=%d)"	,	L_4
BUG_ON	,	F_17
aux	,	V_123
PTR_TO_STACK	,	V_16
MAX_BPF_STACK	,	V_36
"(%02x) r%d = 0x%llx\n"	,	L_26
BPF_JSGT	,	V_232
bpf_arg_type	,	V_140
"BUG_%02x\n"	,	L_19
"BPF_ALU uses reserved fields\n"	,	L_88
"BPF_EXIT uses reserved fields\n"	,	L_115
kzalloc	,	F_109
func_id_name	,	F_1
E2BIG	,	V_253
"R0 leaks addr as return value\n"	,	L_116
EACCES	,	V_95
check_reg_overflow	,	F_56
BPF_MAP_TYPE_HASH	,	V_285
BPF_JSGE	,	V_234
"invalid size of register spill\n"	,	L_38
fixup_bpf_calls	,	F_104
"invalid bpf_context access off=%d size=%d\n"	,	L_46
"R%d !read_ok\n"	,	L_36
"BPF program is too complex\n"	,	L_34
"processed %d insns, stack depth %d\n"	,	L_119
patch_call_imm	,	V_319
pop_stack	,	F_12
"R%d min value is negative, either use unsigned index or do a if (index &gt;=0) check.\n"	,	L_42
func	,	V_182
dst_imm	,	V_212
id_gen	,	V_197
log_len	,	V_329
BPF_SIZE	,	F_11
size_code	,	V_312
PTR_TO_MAP_VALUE_ADJ	,	V_25
"BUG_ld_%02x\n"	,	L_27
process_bpf_exit	,	V_279
reg_type_str	,	V_14
check_ld_imm	,	F_68
explored_states	,	V_250
MAX_USED_MAPS	,	V_297
kmalloc_array	,	F_115
__bpf_call_base	,	V_320
"(%02x) goto pc%+d\n"	,	L_29
BPF_MODE	,	F_10
bpf_ext_analyzer_ops	,	V_339
",min_align=%u"	,	L_8
check_map_access	,	F_27
check_xadd	,	F_39
regno	,	V_86
val	,	V_227
check_packet_ptr_add	,	F_48
bpf_map_put	,	F_93
"R%d invalid mem access '%s'\n"	,	L_57
check_stack_boundary	,	F_40
convert_ctx_access	,	V_310
"Unknown alignment. Only byte-sized access allowed in value access.\n"	,	L_49
insn_buf	,	V_306
dst_needed	,	V_314
"invalid stack type R%d off=%d access_size=%d\n"	,	L_61
ptr_type	,	V_282
convert_ctx_accesses	,	F_100
kfree	,	F_13
BPF_IMM	,	V_62
inner_map_meta	,	V_235
STACK_INVALID	,	V_270
range	,	V_20
"R%d unbounded memory access, use 'var &amp;= const' or 'if (var &lt; const)'\n"	,	L_70
CONFIG_HAVE_EFFICIENT_UNALIGNED_ACCESS	,	V_334
"cannot add '%s' to ptr_to_packet\n"	,	L_80
out	,	V_213
BPF_MAP_TYPE_PERCPU_HASH	,	V_286
err_free	,	V_264
BPF_IND	,	V_61
mark_reg_unknown_value	,	F_20
BPF_ST	,	V_57
"%d: safe\n"	,	L_107
arg2_type	,	V_174
"invalid shift %d\n"	,	L_90
"frame pointer is read only\n"	,	L_37
"R%d unbounded memory access, make sure to bounds check any array access into a map\n"	,	L_44
BPF_READ	,	V_134
aux_off_align	,	V_35
CONST_PTR_TO_MAP	,	V_22
check_cfg	,	F_72
prog	,	V_109
"\nfrom %d to %d:"	,	L_109
err_free_env	,	V_325
EINVAL	,	V_93
bpf_verifier_stack_elem	,	V_75
convert_pseudo_ld_imm64	,	F_94
compare_ptrs_to_packet	,	F_74
vmalloc	,	F_111
BPF_MUL	,	V_207
is_state_visited	,	F_77
"R%d leaks addr into mem\n"	,	L_59
"BPF program is too large. Processed %d insn\n"	,	L_105
"(%02x) r0 = *(%s *)skb[%d]\n"	,	L_24
"\n"	,	L_12
bpf_map	,	V_102
BPF_LSH	,	V_206
reg_set_min_max	,	F_62
err_type	,	V_147
BPF_JMP	,	V_67
BPF_FUNC_get_stackid	,	V_163
BPF_XADD	,	V_56
"\nfrom %d to %d: safe\n"	,	L_106
IS_ENABLED	,	F_112
access_size	,	V_137
BPF_EXIT	,	V_71
need_resched	,	F_80
arg_type	,	V_141
UINT_MAX	,	V_330
true_reg	,	V_225
max_val	,	V_215
BPF_REGISTER_MAX_RANGE	,	V_32
ctx_field_size	,	V_127
bpf_call_arg_meta	,	V_106
bpf_attr	,	V_322
EXPLORED	,	V_255
check_map_func_compatibility	,	F_43
BPF_JNE	,	V_230
elem	,	V_76
dst_reg	,	V_50
"R%d partial copy of pointer\n"	,	L_86
PTR_ERR	,	F_89
free_log_buf	,	V_338
BPF_MAP_TYPE_CGROUP_ARRAY	,	V_164
max_ctx_offset	,	V_128
"BPF_MOV uses reserved fields\n"	,	L_85
"invalid BPF_LD mode\n"	,	L_117
GFP_USER	,	V_274
"back-edge from insn %d to %d\n"	,	L_100
BPF_MAP_PTR_POISON	,	V_198
prev_src_type	,	V_280
BPF_ALU32_IMM	,	F_102
check_stack_read	,	F_26
evaluate_reg_alu	,	F_50
STATE_LIST_MARK	,	V_251
BPF_PROG_TYPE_SOCKET_FILTER	,	V_240
bpf_func_proto	,	V_170
value_size	,	V_28
gpl_only	,	V_181
imm	,	V_17
insns	,	V_256
BPF_PROG_TYPE_LWT_IN	,	V_110
bpf_check	,	F_108
bpf_patch_insn_data	,	F_98
"(%02x) if r%d %s r%d goto pc%+d\n"	,	L_31
"insn state internal bug\n"	,	L_101
do_check	,	F_79
ARG_PTR_TO_MAP_KEY	,	V_145
caller_saved	,	V_189
"(%02x) r0 = *(%s *)skb[r%d + %d]\n"	,	L_25
"(%02x) exit\n"	,	L_30
reg_off	,	V_131
prog_len	,	V_298
"R%d pointer comparison prohibited\n"	,	L_93
" fp%d=%s"	,	L_11
map_flags	,	V_287
