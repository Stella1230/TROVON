paravirt_alloc_pmd	,	F_5
"No.\n"	,	L_13
pmd	,	V_8
nid	,	V_69
__pgd	,	F_8
_PAGE_TABLE	,	V_10
PFN_ALIGN	,	F_99
PAGE_SHIFT	,	V_7
pr_warn	,	F_55
page_table_range_init	,	F_31
"    pkmap   : 0x%08lx - 0x%08lx   (%4ld kB)\n"	,	L_17
mem_init	,	F_86
"Use a HIGHMEM enabled kernel.\n"	,	L_6
PMD_SHIFT	,	V_21
memblock_set_node	,	F_72
KERN_WARNING	,	V_83
pgd_present	,	F_52
pmd_offset	,	F_12
__init_begin	,	V_107
max_mapnr	,	V_93
initmem_init	,	F_69
panic	,	F_85
nr_pages	,	V_112
size	,	V_110
p4d_offset	,	F_9
pte_idx	,	V_15
newpte	,	V_30
kmap_vstart	,	V_64
X86_FEATURE_PSE	,	V_50
kmap_init	,	F_42
"Set kernel text: %lx - %lx for read only\n"	,	L_24
__flush_tlb_all	,	F_29
olpc_dt_build_devicetree	,	F_77
debug_checkwx	,	F_109
"      .init : 0x%08lx - 0x%08lx   (%4ld kB)\n"	,	L_20
is_kernel_text	,	F_33
PG_LEVEL_4K	,	V_63
permanent_kmaps_init	,	F_44
pmd_index	,	F_21
PMD_SIZE	,	V_26
free_all_bootmem	,	F_89
want_memblock	,	V_111
arg	,	V_77
kernel_set_to_readonly	,	V_114
pgd_t	,	T_3
pfn_pte	,	F_38
pages_4k	,	V_48
FIX_WP_TEST	,	V_99
fix_to_virt	,	F_26
"Write protecting the kernel read-only data: %luk\n"	,	L_29
pmd_t	,	T_1
"try to clear pte for ram above max_low_pfn: pfn: %lx pmd: %p pmd phys: %lx, but pmd is big page and is not using pte !\n"	,	L_1
__end_of_fixed_addresses	,	V_75
__FIXADDR_TOP	,	F_91
i	,	V_31
FIX_KMAP_BEGIN	,	V_23
boot_cpu_has	,	F_35
highstart_pfn	,	V_86
CONFIG_X86_PAE	,	F_2
PAGE_KERNEL_LARGE_EXEC	,	V_60
phys_addr_t	,	T_8
z	,	V_98
HPAGE_MASK	,	V_116
KERN_NOTICE	,	V_88
pmd_val	,	F_14
page_size_mask	,	V_39
MAX_NONPAE_PFN	,	V_85
mark_nxdata_nx	,	F_105
free_highmem_page	,	F_49
"      .text : 0x%08lx - 0x%08lx   (%4ld kB)\n"	,	L_22
PG_LEVEL_2M	,	V_41
PTE_IDENT_ATTR	,	V_57
max_pfn_mapped	,	V_96
"    vmalloc : 0x%08lx - 0x%08lx   (%4ld MB)\n"	,	L_18
memblock	,	V_91
__vmalloc_start_set	,	V_94
pmd_idx_kmap_begin	,	V_19
CONFIG_HIGHMEM64G	,	F_67
"Set kernel text: %lx - %lx for read write\n"	,	L_23
__add_pages	,	F_94
pmd_idx_kmap_end	,	V_22
"Warning only %ldMB will be used.\n"	,	L_4
__va	,	F_71
count	,	V_18
empty_zero_page	,	V_100
va	,	V_71
"      .data : 0x%08lx - 0x%08lx   (%4ld kB)\n"	,	L_21
adr	,	V_29
PTRS_PER_PTE	,	V_33
pte_present	,	F_56
"NX-protecting the kernel data: %luk\n"	,	L_25
pgd_offset_k	,	F_41
"ignoring highmem size on non-highmem kernel!\n"	,	L_3
CONFIG_CPA_DEBUG	,	F_108
pkmap_page_table	,	V_68
start_pfn	,	V_43
kernel_physical_mapping_init	,	F_34
"clearing pte for ram above max_low_pfn: pfn: %lx pmd: %p pmd phys: %lx pte: %p pte phys: %lx\n"	,	L_2
memory	,	V_92
PTRS_PER_PGD	,	V_24
BUG_ON	,	F_11
paravirt_release_pte	,	F_30
printk	,	F_57
__set_fixmap	,	F_81
test_wp_bit	,	F_80
swapper_pg_dir	,	V_14
MAXMEM	,	V_84
end	,	V_17
PAGE_KERNEL_EXEC	,	V_62
pgd_idx	,	V_12
pte	,	V_27
"virtual kernel memory layout:\n"	,	L_15
PKMAP_BASE	,	V_66
"  mapped low ram: 0 - %08lx\n"	,	L_9
start	,	V_16
"Use a HIGHMEM64G enabled kernel.\n"	,	L_5
virt_to_page	,	F_102
__supported_pte_mask	,	V_117
populate_extra_pmd	,	F_19
pmd_idx	,	V_13
pgprot_t	,	T_7
max_low_pfn	,	V_73
pgd_index	,	F_20
arch_remove_memory	,	F_95
pte_t	,	T_6
pmd_table	,	V_4
set_highmem_pages_init	,	F_88
pud	,	V_3
pages_to_mb	,	F_70
set_pmd	,	F_16
base	,	V_72
one_page_table_init	,	F_13
pagetable_init	,	F_62
pr_debug	,	F_100
paging_init	,	F_59
early_ioremap_page_table_range_init	,	F_60
high_memory	,	V_89
pgd_val	,	F_3
_PAGE_PSE	,	V_58
"%ldMB LOWMEM available.\n"	,	L_8
pci_iommu_alloc	,	F_87
mark_rodata_ro	,	F_107
init_mm	,	V_6
pte_index	,	F_23
mem_init_print_info	,	F_90
"  low ram: 0 - %08lx\n"	,	L_10
BUILD_BUG_ON	,	F_92
"Testing CPA: Reverting %lx-%lx\n"	,	L_27
LAST_PKMAP	,	V_67
highmem_pages	,	V_79
early_ioremap_reset	,	F_61
alloc_low_pages	,	F_32
p4d	,	V_2
set_pages_rw	,	F_101
highmem_pfn_init	,	F_66
pmd_present	,	F_53
set_pages_ro	,	F_104
CONFIG_HIGHMEM	,	F_25
page_table_range_init_count	,	F_24
__pa_symbol	,	F_82
clamp_t	,	F_47
page_table	,	V_9
PAGE_SIZE	,	V_34
use_pse	,	V_40
pfn	,	V_46
mapping_iter	,	V_49
__pmd	,	F_17
PAGE_OFFSET	,	V_52
__pgprot	,	F_36
PMD_MASK	,	V_59
_edata	,	V_109
KERN_CONT	,	V_102
pgd	,	V_1
_PAGE_NX	,	V_118
__end_rodata	,	V_119
update_page_count	,	F_39
prot	,	V_54
pud_t	,	T_5
p4d_t	,	T_4
HPAGE_SIZE	,	V_115
add_highpages_with_active_regions	,	F_45
pte_offset_kernel	,	F_18
ULLONG_MAX	,	V_90
CONFIG_FLATMEM	,	F_74
__remove_pages	,	F_97
"Linux doesn't support CPUs with broken WP."	,	L_14
"%ldMB HIGHMEM available.\n"	,	L_7
pfn_valid	,	F_48
for_each_free_mem_range	,	F_46
EINVAL	,	V_78
pte_ofs	,	V_45
"    fixmap  : 0x%08lx - 0x%08lx   (%4ld kB)\n"	,	L_16
__init	,	T_2
page_table_kmap_check	,	F_27
FIXADDR_START	,	V_104
paravirt_alloc_pte	,	F_15
_text	,	V_37
mem_map	,	V_103
MAX_NUMNODES	,	V_97
pfn_pmd	,	F_37
clear_fixmap	,	F_84
IS_ENABLED	,	F_75
max_pfn	,	V_80
sparse_init	,	F_78
PAGE_KERNEL_RO	,	V_101
MAXMEM_PFN	,	V_82
sparse_memory_present_with_active_regions	,	F_73
VMALLOC_END	,	V_106
init_prot	,	V_56
"Testing CPA: write protecting again\n"	,	L_28
zone	,	V_113
PTRS_PER_PMD	,	V_25
pages_2m	,	V_47
set_pages_nx	,	F_106
set_pgd	,	F_7
"Write protecting the kernel text: %luk\n"	,	L_26
__init_end	,	V_38
"Checking if this processor honours the WP bit even in supervisor mode..."	,	L_11
_PAGE_PRESENT	,	V_5
PAGE_KERNEL_LARGE	,	V_55
setup_bootmem_allocator	,	F_76
set_kernel_text_rw	,	F_98
after_bootmem	,	V_32
pgd_base	,	V_35
kmap_pte	,	V_65
highend_pfn	,	V_87
populate_extra_pte	,	F_22
FIX_KMAP_END	,	V_20
VMALLOC_START	,	V_105
set_kernel_text_ro	,	F_103
pfn_to_page	,	F_50
lastpte	,	V_28
lowmem_pfn_init	,	F_65
arch_add_memory	,	F_93
kmap_get_fixmap_pte	,	F_40
KERN_INFO	,	V_95
find_low_pfn_range	,	F_68
zone_sizes_init	,	F_79
PAGE_KERNEL	,	V_61
vaddr	,	V_11
probe_kernel_write	,	F_83
set_pte	,	F_28
FIXADDR_TOP	,	V_76
native_pagetable_init	,	F_51
"Testing CPA: undo %lx-%lx\n"	,	L_30
pud_offset	,	F_10
repeat	,	V_51
"    lowmem  : 0x%08lx - 0x%08lx   (%4ld MB)\n"	,	L_19
addr	,	V_36
"Ok.\n"	,	L_12
last_map_addr	,	V_42
e_pfn	,	V_70
addr2	,	V_53
end_pfn	,	V_44
alloc_low_page	,	F_4
page_zone	,	F_96
u64	,	T_9
_etext	,	V_108
__fix_to_virt	,	F_43
memparse	,	F_64
KERN_ERR	,	V_81
pmd_large	,	F_54
__pa	,	F_6
KERN_DEBUG	,	V_74
one_md_table_init	,	F_1
pte_clear	,	F_58
parse_highmem	,	F_63
